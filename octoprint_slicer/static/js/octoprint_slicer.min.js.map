{"version":3,"file":null,"sources":["../../../node_modules/3tk/dist/3tk.module.js","../../../src/STLViewPort.js","../../../src/profile_overrides.js","../../../src/slicer.js"],"sourcesContent":["import THREE from 'three';\n\n/**\n * @author arodic / https://github.com/arodic\n */\n\nfunction DefaultHandles() {\n\n    var GizmoMaterial = function GizmoMaterial(parameters) {\n\n        THREE.MeshBasicMaterial.call(this);\n\n        this.depthTest = false;\n        this.depthWrite = false;\n        this.side = THREE.FrontSide;\n        this.transparent = true;\n\n        this.setValues(parameters);\n\n        this.oldColor = this.color.clone();\n        this.oldOpacity = this.opacity;\n\n        this.highlight = function (highlighted) {\n\n            if (highlighted) {\n\n                this.color.setRGB(1, 1, 0);\n                this.opacity = 1;\n            } else {\n\n                this.color.copy(this.oldColor);\n                this.opacity = this.oldOpacity;\n            }\n        };\n    };\n\n    GizmoMaterial.prototype = Object.create(THREE.MeshBasicMaterial.prototype);\n    GizmoMaterial.prototype.constructor = GizmoMaterial;\n\n    var GizmoLineMaterial = function GizmoLineMaterial(parameters) {\n\n        THREE.LineBasicMaterial.call(this);\n\n        this.depthTest = false;\n        this.depthWrite = false;\n        this.transparent = true;\n        this.linewidth = 1;\n\n        this.setValues(parameters);\n\n        this.oldColor = this.color.clone();\n        this.oldOpacity = this.opacity;\n\n        this.highlight = function (highlighted) {\n\n            if (highlighted) {\n\n                this.color.setRGB(1, 1, 0);\n                this.opacity = 1;\n            } else {\n\n                this.color.copy(this.oldColor);\n                this.opacity = this.oldOpacity;\n            }\n        };\n    };\n\n    GizmoLineMaterial.prototype = Object.create(THREE.LineBasicMaterial.prototype);\n    GizmoLineMaterial.prototype.constructor = GizmoLineMaterial;\n\n    var invisibleMaterial = new GizmoMaterial({ visible: false, transparent: false });\n\n    var gizmoFromMap = function gizmoFromMap(gizmoMap) {\n\n        var gizmo = new THREE.Object3D();\n\n        for (var name in gizmoMap) {\n\n            for (var i = gizmoMap[name].length; i--;) {\n\n                var object = gizmoMap[name][i][0];\n                var position = gizmoMap[name][i][1];\n                var rotation = gizmoMap[name][i][2];\n\n                object.name = name;\n\n                if (position) object.position.set(position[0], position[1], position[2]);\n                if (rotation) object.rotation.set(rotation[0], rotation[1], rotation[2]);\n\n                gizmo.add(object);\n            }\n        }\n\n        return gizmo;\n    };\n\n    this.translateHandles = function () {\n        var arrowGeometry = new THREE.Geometry();\n        var mesh = new THREE.Mesh(new THREE.CylinderGeometry(0, 0.05, 0.2, 12, 1, false));\n        mesh.position.y = 0.5;\n        mesh.updateMatrix();\n\n        arrowGeometry.merge(mesh.geometry, mesh.matrix);\n\n        var lineXGeometry = new THREE.BufferGeometry();\n        lineXGeometry.addAttribute('position', new THREE.Float32BufferAttribute([0, 0, 0, 1, 0, 0], 3));\n\n        var lineYGeometry = new THREE.BufferGeometry();\n        lineYGeometry.addAttribute('position', new THREE.Float32BufferAttribute([0, 0, 0, 0, 1, 0], 3));\n\n        var lineZGeometry = new THREE.BufferGeometry();\n        lineZGeometry.addAttribute('position', new THREE.Float32BufferAttribute([0, 0, 0, 0, 0, 1], 3));\n\n        return gizmoFromMap({\n            X: [[new THREE.Mesh(arrowGeometry, new GizmoMaterial({ color: 0xff0000 })), [0.5, 0, 0], [0, 0, -Math.PI / 2]], [new THREE.Line(lineXGeometry, new GizmoLineMaterial({ color: 0xff0000 }))], [new THREE.Mesh(new THREE.CylinderBufferGeometry(0.2, 0, 1, 4, 1, false), invisibleMaterial), [0.6, 0, 0], [0, 0, -Math.PI / 2]]],\n\n            Y: [[new THREE.Mesh(arrowGeometry, new GizmoMaterial({ color: 0x00ff00 })), [0, 0.5, 0]], [new THREE.Line(lineYGeometry, new GizmoLineMaterial({ color: 0x00ff00 }))], [new THREE.Mesh(new THREE.CylinderBufferGeometry(0.2, 0, 1, 4, 1, false), invisibleMaterial), [0, 0.6, 0]]],\n\n            Z: [[new THREE.Mesh(arrowGeometry, new GizmoMaterial({ color: 0x0000ff })), [0, 0, 0.5], [Math.PI / 2, 0, 0]], [new THREE.Line(lineZGeometry, new GizmoLineMaterial({ color: 0x0000ff }))], [new THREE.Mesh(new THREE.CylinderBufferGeometry(0.2, 0, 1, 4, 1, false), invisibleMaterial), [0, 0, 0.6], [Math.PI / 2, 0, 0]]],\n\n            XYZ: [[new THREE.Mesh(new THREE.OctahedronGeometry(0.1, 0), new GizmoMaterial({ color: 0xffffff, opacity: 0.25 })), [0, 0, 0], [0, 0, 0]], [new THREE.Mesh(new THREE.OctahedronGeometry(0.2, 0), invisibleMaterial)]],\n\n            XY: [[new THREE.Mesh(new THREE.PlaneBufferGeometry(0.29, 0.29), new GizmoMaterial({ color: 0xffff00, opacity: 0.25 })), [0.15, 0.15, 0]], [new THREE.Mesh(new THREE.PlaneBufferGeometry(0.4, 0.4), invisibleMaterial), [0.2, 0.2, 0]]],\n\n            YZ: [[new THREE.Mesh(new THREE.PlaneBufferGeometry(0.29, 0.29), new GizmoMaterial({ color: 0x00ffff, opacity: 0.25 })), [0, 0.15, 0.15], [0, Math.PI / 2, 0]], [new THREE.Mesh(new THREE.PlaneBufferGeometry(0.4, 0.4), invisibleMaterial), [0, 0.2, 0.2], [0, Math.PI / 2, 0]]],\n\n            XZ: [[new THREE.Mesh(new THREE.PlaneBufferGeometry(0.29, 0.29), new GizmoMaterial({ color: 0xff00ff, opacity: 0.25 })), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]], [new THREE.Mesh(new THREE.PlaneBufferGeometry(0.4, 0.4), invisibleMaterial), [0.2, 0, 0.2], [-Math.PI / 2, 0, 0]]]\n\n        });\n    };\n\n    this.rotateHandles = function () {\n\n        var CircleGeometry = function CircleGeometry(radius, facing, arc) {\n\n            var geometry = new THREE.BufferGeometry();\n            var vertices = [];\n            arc = arc ? arc : 1;\n\n            for (var i = 0; i <= 64 * arc; ++i) {\n\n                if (facing === 'x') vertices.push(0, Math.cos(i / 32 * Math.PI) * radius, Math.sin(i / 32 * Math.PI) * radius);\n                if (facing === 'y') vertices.push(Math.cos(i / 32 * Math.PI) * radius, 0, Math.sin(i / 32 * Math.PI) * radius);\n                if (facing === 'z') vertices.push(Math.sin(i / 32 * Math.PI) * radius, Math.cos(i / 32 * Math.PI) * radius, 0);\n            }\n\n            geometry.addAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\n            return geometry;\n        };\n\n        return gizmoFromMap({\n            X: [[new THREE.Line(new CircleGeometry(1, 'x', 0.5), new GizmoLineMaterial({ color: 0xff0000 }))], [new THREE.Mesh(new THREE.TorusBufferGeometry(1, 0.12, 4, 12, Math.PI), invisibleMaterial), [0, 0, 0], [0, -Math.PI / 2, -Math.PI / 2]]],\n\n            Y: [[new THREE.Line(new CircleGeometry(1, 'y', 0.5), new GizmoLineMaterial({ color: 0x00ff00 }))], [new THREE.Mesh(new THREE.TorusBufferGeometry(1, 0.12, 4, 12, Math.PI), invisibleMaterial), [0, 0, 0], [Math.PI / 2, 0, 0]]],\n\n            Z: [[new THREE.Line(new CircleGeometry(1, 'z', 0.5), new GizmoLineMaterial({ color: 0x0000ff }))], [new THREE.Mesh(new THREE.TorusBufferGeometry(1, 0.12, 4, 12, Math.PI), invisibleMaterial), [0, 0, 0], [0, 0, -Math.PI / 2]]],\n\n            E: [[new THREE.Line(new CircleGeometry(1.25, 'z', 1), new GizmoLineMaterial({ color: 0xcccc00 }))], [new THREE.Mesh(new THREE.TorusBufferGeometry(1.25, 0.12, 2, 24), invisibleMaterial)]],\n\n            XYZE: [[new THREE.Line(new CircleGeometry(1, 'z', 1), new GizmoLineMaterial({ color: 0x787878 }))], [new THREE.Mesh()] // TODO\n            ]\n        });\n    };\n\n    this.scaleHandles = function () {\n        var arrowGeometry = new THREE.Geometry();\n        var mesh = new THREE.Mesh(new THREE.BoxGeometry(0.125, 0.125, 0.125));\n        mesh.position.y = 0.5;\n        mesh.updateMatrix();\n\n        arrowGeometry.merge(mesh.geometry, mesh.matrix);\n\n        var lineXGeometry = new THREE.BufferGeometry();\n        lineXGeometry.addAttribute('position', new THREE.Float32BufferAttribute([0, 0, 0, 1, 0, 0], 3));\n\n        var lineYGeometry = new THREE.BufferGeometry();\n        lineYGeometry.addAttribute('position', new THREE.Float32BufferAttribute([0, 0, 0, 0, 1, 0], 3));\n\n        var lineZGeometry = new THREE.BufferGeometry();\n        lineZGeometry.addAttribute('position', new THREE.Float32BufferAttribute([0, 0, 0, 0, 0, 1], 3));\n\n        return gizmoFromMap({\n            X: [[new THREE.Mesh(arrowGeometry, new GizmoMaterial({ color: 0xff0000 })), [0.5, 0, 0], [0, 0, -Math.PI / 2]], [new THREE.Line(lineXGeometry, new GizmoLineMaterial({ color: 0xff0000 }))], [new THREE.Mesh(new THREE.CylinderBufferGeometry(0.2, 0, 1, 4, 1, false), invisibleMaterial), [0.6, 0, 0], [0, 0, -Math.PI / 2]]],\n\n            Y: [[new THREE.Mesh(arrowGeometry, new GizmoMaterial({ color: 0x00ff00 })), [0, 0.5, 0]], [new THREE.Line(lineYGeometry, new GizmoLineMaterial({ color: 0x00ff00 }))], [new THREE.Mesh(new THREE.CylinderBufferGeometry(0.2, 0, 1, 4, 1, false), invisibleMaterial), [0, 0.6, 0]]],\n\n            Z: [[new THREE.Mesh(arrowGeometry, new GizmoMaterial({ color: 0x0000ff })), [0, 0, 0.5], [Math.PI / 2, 0, 0]], [new THREE.Line(lineZGeometry, new GizmoLineMaterial({ color: 0x0000ff }))], [new THREE.Mesh(new THREE.CylinderBufferGeometry(0.2, 0, 1, 4, 1, false), invisibleMaterial), [0, 0, 0.6], [Math.PI / 2, 0, 0]]],\n\n            XYZ: [[new THREE.Mesh(new THREE.BoxBufferGeometry(0.125, 0.125, 0.125), new GizmoMaterial({ color: 0xffffff, opacity: 0.25 }))], [new THREE.Mesh(new THREE.BoxBufferGeometry(0.4, 0.4, 0.4), invisibleMaterial)]]\n        });\n    };\n}\n\nfunction TransformGizmo(handles) {\n\n    this.handles = handles;\n\n    this.init = function () {\n\n        THREE.Object3D.call(this);\n\n        this.add(this.handles);\n\n        this.planes = new THREE.Object3D();\n        this.add(this.planes);\n\n        //// PLANES\n\n        var planeGeometry = new THREE.PlaneBufferGeometry(50, 50, 2, 2);\n        var planeMaterial = new THREE.MeshBasicMaterial({ visible: false, side: THREE.DoubleSide });\n\n        var planes = {\n            \"XY\": new THREE.Mesh(planeGeometry, planeMaterial),\n            \"YZ\": new THREE.Mesh(planeGeometry, planeMaterial),\n            \"XZ\": new THREE.Mesh(planeGeometry, planeMaterial),\n            \"XYZE\": new THREE.Mesh(planeGeometry, planeMaterial)\n        };\n\n        this.activePlane = planes[\"XYZE\"];\n\n        planes[\"YZ\"].rotation.set(0, Math.PI / 2, 0);\n        planes[\"XZ\"].rotation.set(-Math.PI / 2, 0, 0);\n\n        for (var i in planes) {\n\n            planes[i].name = i;\n            this.planes.add(planes[i]);\n            this.planes[i] = planes[i];\n        }\n\n        // reset Transformations\n\n        this.traverse(function (child) {\n\n            if (child instanceof THREE.Mesh) {\n\n                child.updateMatrix();\n\n                var tempGeometry = child.geometry.clone();\n                tempGeometry.applyMatrix(child.matrix);\n                child.geometry = tempGeometry;\n\n                child.position.set(0, 0, 0);\n                child.rotation.set(0, 0, 0);\n                child.scale.set(1, 1, 1);\n            }\n        });\n    };\n\n    this.setHandles = function (handles) {\n\n        this.remove(this.handles);\n        this.handles = handles;\n        if (this.handles !== null) {\n            this.add(this.handles);\n        }\n    };\n\n    this.highlight = function (axis) {\n\n        this.traverse(function (child) {\n\n            if (child.material && child.material.highlight) {\n\n                if (child.name === axis) {\n\n                    child.material.highlight(true);\n                } else {\n\n                    child.material.highlight(false);\n                }\n            }\n        });\n    };\n}\n\nTransformGizmo.prototype = Object.create(THREE.Object3D.prototype);\nTransformGizmo.prototype.constructor = THREE.TransformGizmo;\n\nTransformGizmo.prototype.update = function (rotation, eye) {\n\n    var vec1 = new THREE.Vector3(0, 0, 0);\n    var vec2 = new THREE.Vector3(0, 1, 0);\n    var lookAtMatrix = new THREE.Matrix4();\n\n    this.traverse(function (child) {\n\n        if (child.name.search(\"E\") !== -1) {\n\n            child.quaternion.setFromRotationMatrix(lookAtMatrix.lookAt(eye, vec1, vec2));\n        } else if (child.name.search(\"X\") !== -1 || child.name.search(\"Y\") !== -1 || child.name.search(\"Z\") !== -1) {\n\n            child.quaternion.setFromEuler(rotation);\n        }\n    });\n};\n\nfunction TransformGizmoTranslate(handles) {\n\n    TransformGizmo.call(this, handles);\n\n    this.setActivePlane = function (axis, eye) {\n\n        var tempMatrix = new THREE.Matrix4();\n        eye.applyMatrix4(tempMatrix.getInverse(tempMatrix.extractRotation(this.planes[\"XY\"].matrixWorld)));\n\n        if (axis === \"X\") {\n\n            this.activePlane = this.planes[\"XY\"];\n\n            if (Math.abs(eye.y) > Math.abs(eye.z)) this.activePlane = this.planes[\"XZ\"];\n        }\n\n        if (axis === \"Y\") {\n\n            this.activePlane = this.planes[\"XY\"];\n\n            if (Math.abs(eye.x) > Math.abs(eye.z)) this.activePlane = this.planes[\"YZ\"];\n        }\n\n        if (axis === \"Z\") {\n\n            this.activePlane = this.planes[\"XZ\"];\n\n            if (Math.abs(eye.x) > Math.abs(eye.y)) this.activePlane = this.planes[\"YZ\"];\n        }\n\n        if (axis === \"XYZ\") this.activePlane = this.planes[\"XYZE\"];\n\n        if (axis === \"XY\") this.activePlane = this.planes[\"XY\"];\n\n        if (axis === \"YZ\") this.activePlane = this.planes[\"YZ\"];\n\n        if (axis === \"XZ\") this.activePlane = this.planes[\"XZ\"];\n    };\n\n    this.init();\n}\n\nTransformGizmoTranslate.prototype = Object.create(TransformGizmo.prototype);\nTransformGizmoTranslate.prototype.constructor = TransformGizmoTranslate;\n\nfunction TransformGizmoRotate(handles) {\n\n    TransformGizmo.call(this, handles);\n\n    this.setActivePlane = function (axis) {\n\n        if (axis === \"E\") this.activePlane = this.planes[\"XYZE\"];\n\n        if (axis === \"X\") this.activePlane = this.planes[\"YZ\"];\n\n        if (axis === \"Y\") this.activePlane = this.planes[\"XZ\"];\n\n        if (axis === \"Z\") this.activePlane = this.planes[\"XY\"];\n    };\n\n    this.update = function (rotation, eye2) {\n\n        TransformGizmo.prototype.update.apply(this, arguments);\n\n        var group = {\n\n            handles: this[\"handles\"]\n\n        };\n\n        var tempMatrix = new THREE.Matrix4();\n        var worldRotation = new THREE.Euler(0, 0, 1);\n        var tempQuaternion = new THREE.Quaternion();\n        var unitX = new THREE.Vector3(1, 0, 0);\n        var unitY = new THREE.Vector3(0, 1, 0);\n        var unitZ = new THREE.Vector3(0, 0, 1);\n        var quaternionX = new THREE.Quaternion();\n        var quaternionY = new THREE.Quaternion();\n        var quaternionZ = new THREE.Quaternion();\n        var eye = eye2.clone();\n\n        worldRotation.copy(this.planes[\"XY\"].rotation);\n        tempQuaternion.setFromEuler(worldRotation);\n\n        tempMatrix.makeRotationFromQuaternion(tempQuaternion).getInverse(tempMatrix);\n        eye.applyMatrix4(tempMatrix);\n\n        this.traverse(function (child) {\n\n            tempQuaternion.setFromEuler(worldRotation);\n\n            if (child.name === \"X\") {\n\n                quaternionX.setFromAxisAngle(unitX, Math.atan2(-eye.y, eye.z));\n                tempQuaternion.multiplyQuaternions(tempQuaternion, quaternionX);\n                child.quaternion.copy(tempQuaternion);\n            }\n\n            if (child.name === \"Y\") {\n\n                quaternionY.setFromAxisAngle(unitY, Math.atan2(eye.x, eye.z));\n                tempQuaternion.multiplyQuaternions(tempQuaternion, quaternionY);\n                child.quaternion.copy(tempQuaternion);\n            }\n\n            if (child.name === \"Z\") {\n\n                quaternionZ.setFromAxisAngle(unitZ, Math.atan2(eye.y, eye.x));\n                tempQuaternion.multiplyQuaternions(tempQuaternion, quaternionZ);\n                child.quaternion.copy(tempQuaternion);\n            }\n        });\n    };\n\n    this.init();\n}\n\nTransformGizmoRotate.prototype = Object.create(TransformGizmo.prototype);\nTransformGizmoRotate.prototype.constructor = TransformGizmoRotate;\n\nfunction TransformGizmoScale(handles) {\n\n    TransformGizmo.call(this, handles);\n\n    this.setActivePlane = function (axis, eye) {\n\n        var tempMatrix = new THREE.Matrix4();\n        eye.applyMatrix4(tempMatrix.getInverse(tempMatrix.extractRotation(this.planes[\"XY\"].matrixWorld)));\n\n        if (axis === \"X\") {\n\n            this.activePlane = this.planes[\"XY\"];\n            if (Math.abs(eye.y) > Math.abs(eye.z)) this.activePlane = this.planes[\"XZ\"];\n        }\n\n        if (axis === \"Y\") {\n\n            this.activePlane = this.planes[\"XY\"];\n            if (Math.abs(eye.x) > Math.abs(eye.z)) this.activePlane = this.planes[\"YZ\"];\n        }\n\n        if (axis === \"Z\") {\n\n            this.activePlane = this.planes[\"XZ\"];\n            if (Math.abs(eye.x) > Math.abs(eye.y)) this.activePlane = this.planes[\"YZ\"];\n        }\n\n        if (axis === \"XYZ\") this.activePlane = this.planes[\"XYZE\"];\n    };\n\n    this.init();\n}\n\nTransformGizmoScale.prototype = Object.create(TransformGizmo.prototype);\nTransformGizmoScale.prototype.constructor = TransformGizmoScale;\n\nfunction TransformControls(camera, domElement) {\n\n    // TODO: Make non-uniform scale and rotate play nice in hierarchies\n    // TODO: ADD RXYZ contol\n\n    THREE.Object3D.call(this);\n\n    domElement = domElement !== undefined ? domElement : document;\n\n    this.defaultHandles = new DefaultHandles();\n\n    this.object = undefined;\n    this.visible = false;\n    this.translationSnap = null;\n    this.rotationSnap = null;\n    this.space = \"world\";\n    this.size = 1;\n    this.axis = null;\n    this.dragObject = false;\n\n    var scope = this;\n\n    var _mode = \"translate\";\n    var _dragging = false;\n    var _plane = \"XY\";\n    var _gizmo = {\n        \"translate\": new TransformGizmoTranslate(scope.defaultHandles.translateHandles()),\n        \"rotate\": new TransformGizmoRotate(scope.defaultHandles.rotateHandles()),\n        \"scale\": new TransformGizmoScale(scope.defaultHandles.scaleHandles())\n    };\n\n    for (var type in _gizmo) {\n\n        var gizmoObj = _gizmo[type];\n\n        gizmoObj.visible = type === _mode;\n        this.add(gizmoObj);\n    }\n\n    var changeEvent = { type: \"change\" };\n    var mouseDownEvent = { type: \"mouseDown\" };\n    var mouseUpEvent = { type: \"mouseUp\", mode: _mode };\n    var objectChangeEvent = { type: \"objectChange\" };\n\n    var ray = new THREE.Raycaster();\n    ray.linePrecision = 0.01;\n    var pointerVector = new THREE.Vector2();\n\n    var point = new THREE.Vector3();\n    var offset = new THREE.Vector3();\n\n    var rotation = new THREE.Vector3();\n    var offsetRotation = new THREE.Vector3();\n    var scale = 1;\n\n    var lookAtMatrix = new THREE.Matrix4();\n    var eye = new THREE.Vector3();\n\n    var tempMatrix = new THREE.Matrix4();\n    var tempVector = new THREE.Vector3();\n    var tempQuaternion = new THREE.Quaternion();\n    var unitX = new THREE.Vector3(1, 0, 0);\n    var unitY = new THREE.Vector3(0, 1, 0);\n    var unitZ = new THREE.Vector3(0, 0, 1);\n\n    var quaternionXYZ = new THREE.Quaternion();\n    var quaternionX = new THREE.Quaternion();\n    var quaternionY = new THREE.Quaternion();\n    var quaternionZ = new THREE.Quaternion();\n    var quaternionE = new THREE.Quaternion();\n\n    var oldPosition = new THREE.Vector3();\n    var oldScale = new THREE.Vector3();\n    var oldRotationMatrix = new THREE.Matrix4();\n\n    var parentRotationMatrix = new THREE.Matrix4();\n    var parentScale = new THREE.Vector3();\n\n    var worldPosition = new THREE.Vector3();\n    var worldRotation = new THREE.Euler();\n    var worldRotationMatrix = new THREE.Matrix4();\n    var camPosition = new THREE.Vector3();\n    var camRotation = new THREE.Euler();\n\n    domElement.addEventListener(\"mousedown\", onPointerDown, false);\n    domElement.addEventListener(\"touchstart\", onPointerDown, false);\n\n    domElement.addEventListener(\"mousemove\", onPointerHover, false);\n    domElement.addEventListener(\"touchmove\", onPointerHover, false);\n\n    domElement.addEventListener(\"mousemove\", onPointerMove, false);\n    domElement.addEventListener(\"touchmove\", onPointerMove, false);\n\n    domElement.addEventListener(\"mouseup\", onPointerUp, false);\n    domElement.addEventListener(\"mouseout\", onPointerUp, false);\n    domElement.addEventListener(\"touchend\", onPointerUp, false);\n    domElement.addEventListener(\"touchcancel\", onPointerUp, false);\n    domElement.addEventListener(\"touchleave\", onPointerUp, false);\n\n    this.dispose = function () {\n\n        domElement.removeEventListener(\"mousedown\", onPointerDown);\n        domElement.removeEventListener(\"touchstart\", onPointerDown);\n\n        domElement.removeEventListener(\"mousemove\", onPointerHover);\n        domElement.removeEventListener(\"touchmove\", onPointerHover);\n\n        domElement.removeEventListener(\"mousemove\", onPointerMove);\n        domElement.removeEventListener(\"touchmove\", onPointerMove);\n\n        domElement.removeEventListener(\"mouseup\", onPointerUp);\n        domElement.removeEventListener(\"mouseout\", onPointerUp);\n        domElement.removeEventListener(\"touchend\", onPointerUp);\n        domElement.removeEventListener(\"touchcancel\", onPointerUp);\n        domElement.removeEventListener(\"touchleave\", onPointerUp);\n    };\n\n    this.attach = function (object) {\n\n        this.object = object;\n        this.visible = true;\n        this.update();\n    };\n\n    this.detach = function () {\n\n        this.object = undefined;\n        this.visible = false;\n        this.axis = null;\n    };\n\n    this.getMode = function () {\n\n        return _mode;\n    };\n\n    this.setMode = function (mode) {\n\n        _mode = mode ? mode : _mode;\n\n        if (_mode === \"scale\") scope.space = \"local\";\n\n        for (var type in _gizmo) {\n            _gizmo[type].visible = type === _mode;\n        }this.update();\n        scope.dispatchEvent(changeEvent);\n    };\n\n    this.setTranslationSnap = function (translationSnap) {\n\n        scope.translationSnap = translationSnap;\n    };\n\n    this.setRotationSnap = function (rotationSnap) {\n\n        scope.rotationSnap = rotationSnap;\n    };\n\n    this.setSize = function (size) {\n\n        scope.size = size;\n        this.update();\n        scope.dispatchEvent(changeEvent);\n    };\n\n    this.setSpace = function (space) {\n\n        scope.space = space;\n        this.update();\n        scope.dispatchEvent(changeEvent);\n    };\n\n    this.setHandles = function (mode, handles) {\n\n        _gizmo[mode].setHandles(handles);\n        scope.update();\n        scope.dispatchEvent(changeEvent);\n    };\n\n    this.update = function () {\n\n        if (scope.object === undefined) return;\n\n        scope.object.updateMatrixWorld();\n        worldPosition.setFromMatrixPosition(scope.object.matrixWorld);\n        worldRotation.setFromRotationMatrix(tempMatrix.extractRotation(scope.object.matrixWorld));\n\n        camera.updateMatrixWorld();\n        camPosition.setFromMatrixPosition(camera.matrixWorld);\n        camRotation.setFromRotationMatrix(tempMatrix.extractRotation(camera.matrixWorld));\n\n        scale = worldPosition.distanceTo(camPosition) / 6 * scope.size;\n        this.position.copy(worldPosition);\n        this.scale.set(scale, scale, scale);\n\n        if (camera instanceof THREE.PerspectiveCamera) {\n\n            eye.copy(camPosition).sub(worldPosition).normalize();\n        } else if (camera instanceof THREE.OrthographicCamera) {\n\n            eye.copy(camPosition).normalize();\n        }\n\n        if (scope.space === \"local\") {\n\n            _gizmo[_mode].update(worldRotation, eye);\n        } else if (scope.space === \"world\") {\n\n            _gizmo[_mode].update(new THREE.Euler(), eye);\n        }\n\n        _gizmo[_mode].highlight(scope.axis);\n    };\n\n    function onPointerHover(event) {\n\n        if (scope.object === undefined || _dragging === true || _gizmo[_mode].handles === null || event.button !== undefined && event.button !== 0) return;\n\n        var pointer = event.changedTouches ? event.changedTouches[0] : event;\n\n        var intersect = intersectObjects(pointer, _gizmo[_mode].handles.children);\n\n        var axis = null;\n\n        if (intersect) {\n\n            axis = intersect.object.name;\n\n            event.preventDefault();\n        }\n\n        if (scope.axis !== axis) {\n\n            scope.axis = axis;\n            scope.update();\n            scope.dispatchEvent(changeEvent);\n        }\n    }\n\n    function onPointerDown(event) {\n\n        if (scope.object === undefined || _dragging === true || event.button !== undefined && event.button !== 0) return;\n\n        var pointer = event.changedTouches ? event.changedTouches[0] : event;\n\n        if (pointer.button === 0 || pointer.button === undefined) {\n\n            if (_gizmo[_mode].handles !== null) {\n\n                var intersect = intersectObjects(pointer, _gizmo[_mode].handles.children);\n\n                if (!intersect) return;\n\n                event.preventDefault();\n                event.stopPropagation();\n\n                scope.dispatchEvent(mouseDownEvent);\n\n                scope.axis = intersect.object.name;\n            }\n\n            if (!scope.axis) return;\n\n            scope.update();\n\n            eye.copy(camPosition).sub(worldPosition).normalize();\n\n            _gizmo[_mode].setActivePlane(scope.axis, eye);\n\n            var planeIntersect = intersectObjects(pointer, [_gizmo[_mode].activePlane]);\n\n            if (planeIntersect) {\n\n                oldPosition.copy(scope.object.position);\n                oldScale.copy(scope.object.scale);\n\n                oldRotationMatrix.extractRotation(scope.object.matrix);\n                worldRotationMatrix.extractRotation(scope.object.matrixWorld);\n\n                parentRotationMatrix.extractRotation(scope.object.parent.matrixWorld);\n                parentScale.setFromMatrixScale(tempMatrix.getInverse(scope.object.parent.matrixWorld));\n\n                offset.copy(planeIntersect.point);\n            }\n        }\n\n        _dragging = true;\n    }\n\n    function onPointerMove(event) {\n\n        if (scope.object === undefined || scope.axis === null || _dragging === false || event.button !== undefined && event.button !== 0) return;\n\n        var pointer = event.changedTouches ? event.changedTouches[0] : event;\n\n        var planeIntersect = intersectObjects(pointer, [_gizmo[_mode].activePlane]);\n\n        if (planeIntersect === false) return;\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        point.copy(planeIntersect.point);\n\n        if (_mode === \"translate\") {\n\n            point.sub(offset);\n            point.multiply(parentScale);\n\n            if (scope.space === \"local\") {\n\n                point.applyMatrix4(tempMatrix.getInverse(worldRotationMatrix));\n\n                if (scope.axis.search(\"X\") === -1) point.x = 0;\n                if (scope.axis.search(\"Y\") === -1) point.y = 0;\n                if (scope.axis.search(\"Z\") === -1) point.z = 0;\n\n                point.applyMatrix4(oldRotationMatrix);\n\n                scope.object.position.copy(oldPosition);\n                scope.object.position.add(point);\n            }\n\n            if (scope.space === \"world\" || scope.axis.search(\"XYZ\") !== -1) {\n\n                if (scope.axis.search(\"X\") === -1) point.x = 0;\n                if (scope.axis.search(\"Y\") === -1) point.y = 0;\n                if (scope.axis.search(\"Z\") === -1) point.z = 0;\n\n                point.applyMatrix4(tempMatrix.getInverse(parentRotationMatrix));\n\n                scope.object.position.copy(oldPosition);\n                scope.object.position.add(point);\n            }\n\n            if (scope.translationSnap !== null) {\n\n                if (scope.space === \"local\") {\n\n                    scope.object.position.applyMatrix4(tempMatrix.getInverse(worldRotationMatrix));\n                }\n\n                if (scope.axis.search(\"X\") !== -1) scope.object.position.x = Math.round(scope.object.position.x / scope.translationSnap) * scope.translationSnap;\n                if (scope.axis.search(\"Y\") !== -1) scope.object.position.y = Math.round(scope.object.position.y / scope.translationSnap) * scope.translationSnap;\n                if (scope.axis.search(\"Z\") !== -1) scope.object.position.z = Math.round(scope.object.position.z / scope.translationSnap) * scope.translationSnap;\n\n                if (scope.space === \"local\") {\n\n                    scope.object.position.applyMatrix4(worldRotationMatrix);\n                }\n            }\n        } else if (_mode === \"scale\") {\n\n            point.sub(offset);\n            point.multiply(parentScale);\n\n            if (scope.space === \"local\") {\n\n                if (scope.axis === \"XYZ\") {\n\n                    scale = 1 + point.y / Math.max(oldScale.x, oldScale.y, oldScale.z);\n\n                    scope.object.scale.x = oldScale.x * scale;\n                    scope.object.scale.y = oldScale.y * scale;\n                    scope.object.scale.z = oldScale.z * scale;\n                } else {\n\n                    point.applyMatrix4(tempMatrix.getInverse(worldRotationMatrix));\n\n                    if (scope.axis === \"X\") scope.object.scale.x = oldScale.x * (1 + point.x / oldScale.x);\n                    if (scope.axis === \"Y\") scope.object.scale.y = oldScale.y * (1 + point.y / oldScale.y);\n                    if (scope.axis === \"Z\") scope.object.scale.z = oldScale.z * (1 + point.z / oldScale.z);\n                }\n            }\n        } else if (_mode === \"rotate\") {\n\n            point.sub(worldPosition);\n            point.multiply(parentScale);\n            tempVector.copy(offset).sub(worldPosition);\n            tempVector.multiply(parentScale);\n\n            if (scope.axis === \"E\") {\n\n                point.applyMatrix4(tempMatrix.getInverse(lookAtMatrix));\n                tempVector.applyMatrix4(tempMatrix.getInverse(lookAtMatrix));\n\n                rotation.set(Math.atan2(point.z, point.y), Math.atan2(point.x, point.z), Math.atan2(point.y, point.x));\n                offsetRotation.set(Math.atan2(tempVector.z, tempVector.y), Math.atan2(tempVector.x, tempVector.z), Math.atan2(tempVector.y, tempVector.x));\n\n                tempQuaternion.setFromRotationMatrix(tempMatrix.getInverse(parentRotationMatrix));\n\n                quaternionE.setFromAxisAngle(eye, rotation.z - offsetRotation.z);\n                quaternionXYZ.setFromRotationMatrix(worldRotationMatrix);\n\n                tempQuaternion.multiplyQuaternions(tempQuaternion, quaternionE);\n                tempQuaternion.multiplyQuaternions(tempQuaternion, quaternionXYZ);\n\n                scope.object.quaternion.copy(tempQuaternion);\n            } else if (scope.axis === \"XYZE\") {\n\n                quaternionE.setFromEuler(point.clone().cross(tempVector).normalize()); // rotation axis\n\n                tempQuaternion.setFromRotationMatrix(tempMatrix.getInverse(parentRotationMatrix));\n                quaternionX.setFromAxisAngle(quaternionE, -point.clone().angleTo(tempVector));\n                quaternionXYZ.setFromRotationMatrix(worldRotationMatrix);\n\n                tempQuaternion.multiplyQuaternions(tempQuaternion, quaternionX);\n                tempQuaternion.multiplyQuaternions(tempQuaternion, quaternionXYZ);\n\n                scope.object.quaternion.copy(tempQuaternion);\n            } else if (scope.space === \"local\") {\n\n                point.applyMatrix4(tempMatrix.getInverse(worldRotationMatrix));\n\n                tempVector.applyMatrix4(tempMatrix.getInverse(worldRotationMatrix));\n\n                rotation.set(Math.atan2(point.z, point.y), Math.atan2(point.x, point.z), Math.atan2(point.y, point.x));\n                offsetRotation.set(Math.atan2(tempVector.z, tempVector.y), Math.atan2(tempVector.x, tempVector.z), Math.atan2(tempVector.y, tempVector.x));\n\n                quaternionXYZ.setFromRotationMatrix(oldRotationMatrix);\n\n                if (scope.rotationSnap !== null) {\n\n                    quaternionX.setFromAxisAngle(unitX, Math.round((rotation.x - offsetRotation.x) / scope.rotationSnap) * scope.rotationSnap);\n                    quaternionY.setFromAxisAngle(unitY, Math.round((rotation.y - offsetRotation.y) / scope.rotationSnap) * scope.rotationSnap);\n                    quaternionZ.setFromAxisAngle(unitZ, Math.round((rotation.z - offsetRotation.z) / scope.rotationSnap) * scope.rotationSnap);\n                } else {\n\n                    quaternionX.setFromAxisAngle(unitX, rotation.x - offsetRotation.x);\n                    quaternionY.setFromAxisAngle(unitY, rotation.y - offsetRotation.y);\n                    quaternionZ.setFromAxisAngle(unitZ, rotation.z - offsetRotation.z);\n                }\n\n                if (scope.axis === \"X\") quaternionXYZ.multiplyQuaternions(quaternionXYZ, quaternionX);\n                if (scope.axis === \"Y\") quaternionXYZ.multiplyQuaternions(quaternionXYZ, quaternionY);\n                if (scope.axis === \"Z\") quaternionXYZ.multiplyQuaternions(quaternionXYZ, quaternionZ);\n\n                scope.object.quaternion.copy(quaternionXYZ);\n            } else if (scope.space === \"world\") {\n\n                rotation.set(Math.atan2(point.z, point.y), Math.atan2(point.x, point.z), Math.atan2(point.y, point.x));\n                offsetRotation.set(Math.atan2(tempVector.z, tempVector.y), Math.atan2(tempVector.x, tempVector.z), Math.atan2(tempVector.y, tempVector.x));\n\n                tempQuaternion.setFromRotationMatrix(tempMatrix.getInverse(parentRotationMatrix));\n\n                if (scope.rotationSnap !== null) {\n\n                    quaternionX.setFromAxisAngle(unitX, Math.round((rotation.x - offsetRotation.x) / scope.rotationSnap) * scope.rotationSnap);\n                    quaternionY.setFromAxisAngle(unitY, Math.round((rotation.y - offsetRotation.y) / scope.rotationSnap) * scope.rotationSnap);\n                    quaternionZ.setFromAxisAngle(unitZ, Math.round((rotation.z - offsetRotation.z) / scope.rotationSnap) * scope.rotationSnap);\n                } else {\n\n                    quaternionX.setFromAxisAngle(unitX, rotation.x - offsetRotation.x);\n                    quaternionY.setFromAxisAngle(unitY, rotation.y - offsetRotation.y);\n                    quaternionZ.setFromAxisAngle(unitZ, rotation.z - offsetRotation.z);\n                }\n\n                quaternionXYZ.setFromRotationMatrix(worldRotationMatrix);\n\n                if (scope.axis === \"X\") tempQuaternion.multiplyQuaternions(tempQuaternion, quaternionX);\n                if (scope.axis === \"Y\") tempQuaternion.multiplyQuaternions(tempQuaternion, quaternionY);\n                if (scope.axis === \"Z\") tempQuaternion.multiplyQuaternions(tempQuaternion, quaternionZ);\n\n                tempQuaternion.multiplyQuaternions(tempQuaternion, quaternionXYZ);\n\n                scope.object.quaternion.copy(tempQuaternion);\n            }\n        }\n\n        scope.update();\n        scope.dispatchEvent(changeEvent);\n        scope.dispatchEvent(objectChangeEvent);\n    }\n\n    function onPointerUp(event) {\n\n        event.preventDefault(); // Prevent MouseEvent on mobile\n\n        if (event.button !== undefined && event.button !== 0) return;\n\n        if (_dragging && scope.axis !== null) {\n\n            mouseUpEvent.mode = _mode;\n            scope.dispatchEvent(mouseUpEvent);\n        }\n\n        _dragging = false;\n\n        if ('TouchEvent' in window && event instanceof TouchEvent) {\n\n            // Force \"rollover\"\n\n            scope.axis = null;\n            scope.update();\n            scope.dispatchEvent(changeEvent);\n        } else {\n\n            onPointerHover(event);\n        }\n    }\n\n    function intersectObjects(pointer, objects) {\n\n        var rect = domElement.getBoundingClientRect();\n        var x = (pointer.clientX - rect.left) / rect.width;\n        var y = (pointer.clientY - rect.top) / rect.height;\n\n        pointerVector.set(x * 2 - 1, -(y * 2) + 1);\n        ray.setFromCamera(pointerVector, camera);\n\n        var intersections = ray.intersectObjects(objects, true);\n        return intersections[0] ? intersections[0] : false;\n    }\n}\n\nTransformControls.prototype = Object.create(THREE.Object3D.prototype);\nTransformControls.prototype.constructor = TransformControls;\n\nexport { TransformControls };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n","/**\n * @author kennethjiang / https://github.com/kennethjiang\n *\n *\n * Description: A THREE view port for STL models\n *\n * Usage:\n *  var viewPort = new THREE.STLViewPort(canvas, width, height, function() {\n *     //things to do when any model in the view port changes\n *  });\n *  viewPort.init();\n *  viewPort.loadSTL(url, fucntion(model) {\n *     viewPort.makeModelActive(model);\n *     //things to do when model is loaded\n *  });\n *  var scene = viewPort.scene; // direct access to the scene for to add THREE.Object\n *\n */\n\n\n'use strict';\n\nimport * as THREETK from '3tk';\n\nexport function STLViewPort( canvas, width, height, onChange, onNewModel ) {\n\n    var self = this;\n\n    self.canvas = canvas;\n    self.canvasWidth = width;\n    self.canvasHeight = height;\n    self.onChange = onChange;\n    self.onNewModel = onNewModel;\n\n    self.models = [];\n\n    self.effectController = {\n        metalness: 0.5,\n        roughness: 0.5,\n        modelInactiveColor: new THREE.Color(\"#60715b\"),\n        modelActiveColor: new THREE.Color(\"#34bf0d\"),\n        ambientLightColor: new THREE.Color(\"#2b2b2b\"),\n        directionalLightColor: new THREE.Color(\"#ffffff\"),\n    };\n\n    self.init = function() {\n\n        self.camera = new THREE.PerspectiveCamera( 45, 1.0, 0.1, 5000 );\n\n        self.camera.up.set( 0, 0, 1 );\n        self.camera.position.set( -100, -200, 250 );\n\n        self.scene = new THREE.Scene();\n\n        // Lights\n        var ambientLight = new THREE.AmbientLight( self.effectController.ambientLightColor );  // 0.2\n        self.scene.add( ambientLight );\n        var directionalLight = new THREE.DirectionalLight(self.effectController.directionalLightColor, 1.0);\n        directionalLight.position.set( 100, 100, 500 );\n        self.scene.add( directionalLight );\n        var directionalLight2= new THREE.DirectionalLight(self.effectController.directionalLightColor, 1.0);\n        directionalLight2.position.set( 100, 100, -500);\n        self.scene.add( directionalLight2);\n\n        self.renderer = new THREE.WebGLRenderer( { canvas: self.canvas, antialias: true } );\n\n        self.renderer.setClearColor( 0xd8d8d8 );\n        self.renderer.setSize( self.canvasWidth, self.canvasHeight );\n        self.renderer.setPixelRatio( window.devicePixelRatio );\n\n        self.renderer.gammaInput = true;\n        self.renderer.gammaOutput = true;\n\n        self.orbitControls = new THREE.OrbitControls(self.camera, self.renderer.domElement);\n\n        self.orbitControls.enableDamping = true;\n        self.orbitControls.dampingFactor = 0.25;\n        self.orbitControls.enablePan = false;\n        self.orbitControls.addEventListener(\"change\", self.render);\n\n        self.transformControls = new THREETK.TransformControls(self.camera, self.renderer.domElement);\n\n        self.transformControls.setRotationSnap( THREE.Math.degToRad( 15 ) )\n        self.transformControls.addEventListener(\"change\", self.render);\n        self.transformControls.addEventListener(\"mouseDown\", self.startTransform);\n        self.transformControls.addEventListener(\"mouseUp\", self.endTransform);\n        self.transformControls.addEventListener(\"change\", self.onChange);\n        self.scene.add(self.transformControls);\n\n        window.addEventListener( 'keydown', function ( event ) {\n            switch ( event.keyCode ) {\n                case 17: // Ctrl\n                    self.transformControls.setRotationSnap(null);\n                    break;\n            }\n        });\n\n        window.addEventListener( 'keyup', function ( event ) {\n            switch ( event.keyCode ) {\n                case 17: // Ctrl\n                    self.transformControls.setRotationSnap( THREE.Math.degToRad( 15 ) );\n                    break;\n            }\n        });\n\n        // Unforutnately built-in \"click\" event is fired when it's a drag. We need all these complexity to detect real click (no mousemoves between mousedown and mouseup)\n        self.canvas.addEventListener(\"mousedown\", function() { self.lastMouseEvent = \"mousedown\" });\n        self.canvas.addEventListener(\"mousemove\", function() { self.lastMouseEvent = \"mousemove\" });\n        self.canvas.addEventListener(\"mouseup\", function(e) { if (self.lastMouseEvent == \"mousedown\") self.pickActiveModel(e); });\n\n        self.render();\n    };\n\n    self.render = function() {\n        self.orbitControls.update();\n        self.transformControls.update();\n        self.renderer.render( self.scene, self.camera );\n    };\n\n\n    self.loadSTL = function ( url, onLoad ) {\n        new THREE.STLLoader().load(url, function ( geometry ) {\n            self.onNewModel([\n                self.addModelOfGeometry(geometry)\n            ]);\n        });\n    };\n\n    self.addModelOfGeometry = function( geometry, modelToCopyTransformFrom ) {\n        var material = new THREE.MeshStandardMaterial({\n            color: self.effectController.modelInactiveColor,  // We'll mark it active below.\n            shading: THREE.SmoothShading,\n            side: THREE.DoubleSide,\n            metalness: self.effectController.metalness,\n            roughness: self.effectController.roughness });\n\n        var stlModel = new THREE.Mesh( geometry, material );\n\n        // center model's origin\n        var center = new THREE.Box3().setFromObject(stlModel).center();\n        var model = new THREE.Object3D();\n        model.add(stlModel);\n        stlModel.position.copy(center.negate());\n        if (modelToCopyTransformFrom) {\n            model.rotation.copy(modelToCopyTransformFrom.rotation);\n            model.scale.copy(modelToCopyTransformFrom.scale);\n        }\n\n        self.scene.add(model);\n        self.render();\n\n        self.models.push(model);\n        return model;\n    };\n\n    self.activeModel = function() {\n        return self.transformControls.object;\n    }\n\n    self.pickActiveModel = function( event ) {\n        var rect = self.canvas.getBoundingClientRect();\n        var x = (event.clientX - rect.left) / rect.width;\n        var y = (event.clientY - rect.top) / rect.height;\n\n        var pointerVector = new THREE.Vector2();\n        pointerVector.set((x*2) - 1, -(y*2) + 1);\n        var ray = new THREE.Raycaster();\n        ray.setFromCamera(pointerVector, self.camera);\n\n        // Clicking should cycle through the stlFiles if there are multiple under the cursor.\n        var foundActiveModel = false;\n        var nextPointedModel = undefined;\n        var firstPointedModel = undefined;\n        for (var i = 0; i < self.models.length; i++) {\n            var model = self.models[i];\n            var intersections = ray.intersectObjects( model.children, true ); // Not sure why ray will intersect the children but not the model itself.\n            if (!intersections[0]) {\n                continue;\n            }\n            if (!firstPointedModel) {\n                firstPointedModel = model;\n            }\n            if (foundActiveModel && !nextPointedModel) {\n                nextPointedModel = model;\n            }\n            if (self.activeModel() == model) {\n                foundActiveModel = true;\n            }\n        }\n        if (nextPointedModel) {\n            self.makeModelActive(nextPointedModel);\n        } else if (firstPointedModel) {\n            self.makeModelActive(firstPointedModel);\n        }\n    };\n\n    /**\n     * params:\n     *    m: model to make active. Clear active model if m is undefined\n     *\n     */\n    self.makeModelActive = function(m) {\n        // Sets one file active and inactivates all the others.\n        if (m) {\n            self.transformControls.attach(m);\n        } else {\n            self.transformControls.detach();\n        }\n\n        for (var i = 0; i < self.models.length; i++) {\n            var model = self.models[i];\n            if (model == self.activeModel()) {\n                model.children[0].material.color.copy(self.effectController.modelActiveColor);\n            } else {\n                model.children[0].material.color.copy(self.effectController.modelInactiveColor);\n            }\n        }\n\n        self.render();\n        self.onChange();\n    };\n\n    self.removeActiveModel = function() {\n        if (!self.activeModel()) {\n            return undefined;\n        } else {\n            var model = self.activeModel();\n\n            var index = self.models.indexOf(model);\n            if (index > -1) {\n                self.models.splice(index, 1);\n            }\n\n            self.scene.remove(model);\n            self.makeModelActive(undefined);\n            return model;\n        }\n    };\n\n    self.removeAllModels = function() {\n        for (var i = 0; i < self.models.length; i++) {\n            self.scene.remove(self.models[i]);\n        }\n        self.models = [];\n        self.makeModelActive(undefined);\n    }\n\n    self.splitActiveModel = function() {\n        if (!self.activeModel()) {\n            return;\n        } else {\n            var originalModel = self.removeActiveModel()\n            var geometry = originalModel.children[0].geometry;\n            var newGeometries = GeometryUtils.split(geometry);\n            self.onNewModel(\n                newGeometries.map( function(geometry) {\n                    return self.addModelOfGeometry( geometry, originalModel );\n                })\n            );\n        }\n    };\n\n    self.onlyOneOriginalModel = function() {\n        return self.models.length == 1  &&\n            self.models[0].position.x == 0.0 &&\n            self.models[0].position.y == 0.0 &&\n            self.models[0].rotation.x == 0.0 &&\n            self.models[0].rotation.y == 0.0 &&\n            self.models[0].rotation.z == 0.0 &&\n            self.models[0].scale.x == 1.0 &&\n            self.models[0].scale.y == 1.0 &&\n            self.models[0].scale.z == 1.0\n    };\n\n    self.startTransform = function () {\n        // Disable orbit controls\n        self.orbitControls.enabled = false;\n    };\n\n    self.endTransform = function () {\n        // Enable orbit controls\n        self.orbitControls.enabled = true;\n    };\n\n}\n","/*\n * View model for OctoPrint-Slicer\n *\n * Author: Kenneth Jiang\n * License: AGPLv3\n */\nko.bindingHandlers.numericValue = {\n    init : function(element, valueAccessor, allBindings, data, context) {\n        var interceptor = ko.computed({\n            read: function() {\n                return ko.unwrap(valueAccessor());\n            },\n            write: function(value) {\n                if (!isNaN(value)) {\n                    valueAccessor()(parseFloat(value));\n                }\n            },\n            disposeWhenNodeIsRemoved: element\n        });\n\n        ko.applyBindingsToNode(element, { value: interceptor }, context);\n    }\n};\n\nexport function OverridesViewModel(parameters, array_keys, enum_keys, item_keys, boolean_keys) {\n    var self = this;\n    self.slicingViewModel = parameters[0];\n\n    var ARRAY_KEYS = [\n        \"print_temperature\",\n        \"start_gcode\",\n        \"end_gcode\",\n        \"filament_diameter\"\n    ],\n        ENUM_KEYS = {\n            \"support\" : ko.observableArray([\"none\", \"buildplate\", \"everywhere\"]),\n            \"platform_adhesion\" : ko.observableArray([\"none\", \"brim\", \"raft\"])\n        },\n        ITEM_KEYS = [\n            \"layer_height\",\n            \"temperature\",\n            \"bed_temperature\",\n            \"print_bed_temperature\",\n            \"fill_density\",\n            \"wall_thickness\",\n            \"print_speed\",\n            \"solid_layer_thickness\",\n            \"travel_speed\",\n            \"outer_shell_speed\",\n            \"inner_shell_speed\",\n            \"infill_speed\",\n            \"bottom_layer_speed\",\n            \"filament_flow\",\n            \"retraction_speed\",\n            \"retraction_amount\",\n            \"extrusion_multiplier\",\n        ],\n        BOOLEAN_KEYS = [\n            \"support_material\",\n            \"overhangs\",\n            \"retraction_enable\",\n            \"fan_enabled\",\n            \"cooling\"\n        ];\n    var ALL_KEYS = BOOLEAN_KEYS.concat(ITEM_KEYS).concat(ARRAY_KEYS).concat(Object.keys(ENUM_KEYS));\n\n    // initialize all observables\n    _.forEach(ALL_KEYS, function(k) { self[\"profile.\" + k] = ko.observable(); });\n\n    self.optionsForKey = function(key) {\n        return ENUM_KEYS[key];\n    };\n\n    self.updateOverridesFromProfile = function(profile) {\n\n        // Some options are numeric but might have a percent sign after them.\n        // Remove the percent and save it to replace later.\n        self.endings = {};\n        var stripEndings = function(m, k) {\n            if (_.isString(m[k]) && m[k].endsWith(\"%\")) {\n                self.endings[k] = \"%\";\n                return m[k].slice(0,-1);\n            } else {\n                return m[k];\n            }\n        }\n\n        // Some options are booleans but can be stored as 0/1 or false/true.\n        // Convert to native true/false and keep track of the style.\n        self.booleans = {};\n        var convertBoolean = function(m, k) {\n            var BOOLS = [\n                [\"false\", \"true\"],\n                [\"False\", \"True\"],\n                [\"0\", \"1\"],\n            ];\n            if (m[k] === undefined) {\n                return undefined;\n            }\n            for (var boolType = 0; boolType < BOOLS.length; boolType++) {\n                for (var b = 0; b < BOOLS[boolType].length; b++) {\n                    if (m[k] === BOOLS[boolType][b]) {\n                        self.booleans[k] = BOOLS[boolType];\n                        return !!b;  // Convert 0 to false and 1 to true.\n                    }\n                }\n            }\n            return !!m[k]; // Just take a guess if we can't figure it out.\n        }\n\n\n        // Some options are arrays in cura but not Slic3r.  Keep track of which.\n        self.isArray = [];\n\n        _.forEach(ITEM_KEYS, function(k) { self[\"profile.\" + k]( stripEndings(profile,k) ); });\n        _.forEach(BOOLEAN_KEYS, function(k) { self[\"profile.\" + k]( convertBoolean(profile,k) ); });\n        _.forEach(ENUM_KEYS, function(v, k) { self[\"profile.\" + k]( profile[k] ); });\n        _.forEach(ARRAY_KEYS, function(k) {\n            // Some config options are arrays in cura but not in Slic3r.\n            // Detect which ones are arrays and only convert those.\n            if (_.isArray(profile[k])) {\n                self.isArray.push(k);  // Remember this for later.\n                self[\"profile.\" + k](profile[k][0]);\n            } else {\n                self[\"profile.\" + k](profile[k]);\n            }});\n    };\n\n\n    self.onProfileChange = function(newValue) {\n        if (newValue === undefined) {  // For some reason KO would fire event with newValue=undefined,\n            return;  // in which case we should ignore it otherwise things get messed up\n        }\n\n        var slicing = self.slicingViewModel;\n\n        if( !slicing.slicer() || !slicing.profile() ) {\n            return;\n        }\n\n        self.fetchSlicingProfile( slicing.slicer(), slicing.profile() );\n    };\n\n    self.fetchSlicingProfile = function(slicer, profile) {\n        if (self.profileAjax) {\n            self.profileAjax.abort();\n            self.profileAjax = undefined;\n        }\n\n        self.profileAjax = $.ajax({\n            url: API_BASEURL + \"slicing/\" + slicer + \"/profiles/\" + profile,\n            type: \"GET\",\n            // On success\n            success: function(data) {\n                self.updateOverridesFromProfile(data.data);\n            }\n        });\n    };\n\n    self.slicingViewModel.profile.subscribe( self.onProfileChange );\n    //\n    //End of Profile-handling mess\n\n\n    self.toJS = function() {\n        var result = ko.mapping.toJS(self, {\n            ignore: [\"slicingViewModel\",\n                \"updateOverridesFromProfile\",\n                \"updateOverrides\",\n                \"toJS\",\n                \"optionsForKey\",\n                \"stripEndings\",\n                \"isArray\",\n                \"endings\"]\n        });\n        _.forEach(ITEM_KEYS, function(k) {\n            if(self.endings.hasOwnProperty(k)) {\n                result[\"profile.\" + k] += self.endings[k];\n            }});\n        _.forEach(BOOLEAN_KEYS, function(k) {\n            if(self.booleans.hasOwnProperty(k)) {\n                // Convert false/true to the correct string.\n                result[\"profile.\" + k] = self.booleans[k][result[\"profile.\" + k]?1:0];\n            }});\n\n        for (var key in result) {\n            var baseKey = key.replace(\"profile.\", \"\");\n            // Convert it back to an array if it was an array originally.\n            if (_.contains(ARRAY_KEYS, baseKey) && _.contains(self.isArray, baseKey)) {\n                result[key] = [result[key]];\n            }\n        }\n\n        _.forEach(result, function(k) {\n            // If the value is undefined, must not be valid for this slicer.\n            if (result[k] === undefined) {\n                delete result[k];\n            }\n        });\n        return result;\n    };\n}\n\n// view model class, parameters for constructor, container to bind to\nOCTOPRINT_VIEWMODELS.push([\n    OverridesViewModel,\n    [ \"slicingViewModel\" ],\n    [ \"#basic_overrides\", \"#advanced_overrides\" ]\n]);\n","/*\n * View model for OctoPrint-Slicer\n *\n * Author: Kenneth Jiang\n * License: AGPLv3\n */\n\n'use strict';\n\nimport { STLViewPort } from './STLViewPort';\nimport { OverridesViewModel } from './profile_overrides';\n\nif (window.location.hostname != \"localhost\") {\n    Raven.config('https://85bd9314656d40da9249aec5a32a2b52@sentry.io/141297', {\n        release: '0.9.6',\n        ignoreErrors: [\n            \"Failed to execute 'arc' on 'CanvasRenderingContext2D': The radius provided\",\n            \"Cannot read property 'highlightFill' of undefined\",\n            \"Argument 1 of SVGMatrix.translate is not a finite floating-point value\",\n            /_jp.*is not a function/,\n        ],\n    }).install();\n}\n\nfunction SlicerViewModel(parameters) {\n    mixpanel.track(\"App Loaded\");\n\n    var self = this;\n\n    self.canvas = document.getElementById( 'slicer-canvas' );\n\n    //check if webGL is present. If not disable Slicer plugin\n    if ( ! Detector.webgl ) {\n        $('#tab_plugin_slicer').empty().append(\"<h3>Slicer Plugin is disabled because your browser doesn't support WebGL</h3>\");\n        return;\n    }\n\n    // assign the injected parameters, e.g.:\n    self.slicingViewModel = parameters[0];\n    self.overridesViewModel = parameters[1];\n    self.printerStateViewModel = parameters[2];\n    self.printerProfilesViewModel = parameters[3];\n\n    self.lockScale = true;\n    self.selectedSTL = undefined;\n    self.newPrint = true;\n\n\n    // Override slicingViewModel.show to surpress default slicing behavior\n    self.slicingViewModel.show = function(target, file, force) {\n        if (!self.slicingViewModel.enableSlicingDialog() && !force) {\n            return;\n        }\n        mixpanel.track(\"Load STL\");\n\n        $('a[href=\"#tab_plugin_slicer\"]').tab('show');\n\n        self.selectedSTL = {target: target, file: file};\n        if (self.newPrint) {\n            self.addToNewPrint();\n        } else {\n            $(\"#plugin-slicer-load-model\").modal(\"show\");\n        }\n    };\n\n    self.addToNewPrint = function() {\n        self.clearPrint();\n        self.addToExistingPrint();\n    };\n\n    self.addToExistingPrint = function() {\n        self.setSlicingViewModel(self.selectedSTL.target, self.selectedSTL.file);\n        self.addSTL(self.selectedSTL.target, self.selectedSTL.file);\n        self.selectedSTL = undefined;\n\n        $(\"#plugin-slicer-load-model\").modal(\"hide\");\n    };\n\n    self.clearPrint = function() {\n        self.resetSlicingViewModel();\n        self.stlViewPort.removeAllModels();\n        self.newPrint = true;\n    }\n\n    self.addSTL = function(target, file) {\n        self.newPrint = false;\n        self.stlViewPort.loadSTL(BASEURL + \"downloads/files/\" + target + \"/\" + file);\n    }\n\n    self.onModelAdd = function(models) {\n\n        self.stlViewPort.makeModelActive(models[0]);\n\n        models.forEach( function( model ) {\n            self.fixZPosition(model);\n        });\n\n        if (self.stlViewPort.models.length > 1) {\n            ModelArranger.arrange(self.stlViewPort.models);\n        }\n        self.stlViewPort.render();\n\n        $('#tab_plugin_slicer > div.translucent-blocker').hide();\n\n    };\n\n    self.onModelRemove = function(model) {\n        if (self.stlViewPort.models.length == 0) {\n            self.clearPrint();\n        }\n    };\n\n    self.updatePrinterBed = function(profileName) {\n        if ( profileName) {\n            var profile = self.printerProfilesViewModel.profiles.items().find(function(p) { return p.id == profileName })\n\n            var dim = profile.volume\n            self.BEDSIZE_X_MM = dim.width;\n            self.BEDSIZE_Y_MM = dim.depth;\n            self.BEDSIZE_Z_MM = dim.height;\n            if (dim.origin == \"lowerleft\" ) {\n                self.ORIGIN_OFFSET_X_MM = self.BEDSIZE_X_MM/2.0;\n                self.ORIGIN_OFFSET_Y_MM = self.BEDSIZE_Y_MM/2.0;\n            } else {\n                self.ORIGIN_OFFSET_X_MM = 0;\n                self.ORIGIN_OFFSET_Y_MM = 0;\n            }\n        }\n        self.drawBedFloor(self.BEDSIZE_X_MM, self.BEDSIZE_Y_MM);\n        self.drawWalls(self.BEDSIZE_X_MM, self.BEDSIZE_Y_MM, self.BEDSIZE_Z_MM);\n        self.stlViewPort.render();\n    }\n\n    self.slicingViewModel.printerProfile.subscribe( self.updatePrinterBed );\n\n    self.BEDSIZE_X_MM = 200;\n    self.BEDSIZE_Y_MM = 200;\n    self.BEDSIZE_Z_MM = 200;\n    self.ORIGIN_OFFSET_X_MM = 0;\n    self.ORIGIN_OFFSET_Y_MM = 0;\n\n    var CANVAS_WIDTH = 588,\n        CANVAS_HEIGHT = 588;\n\n\n    self.init = function() {\n\n        self.slicingViewModel.requestData();\n\n        self.stlViewPort = new STLViewPort(self.canvas, CANVAS_WIDTH, CANVAS_HEIGHT, self.onModelChange, self.onModelAdd)\n        self.stlViewPort.init();\n\n        //Walls and Floor\n        self.walls = new THREE.Object3D();\n        self.floor = new THREE.Object3D();\n        self.stlViewPort.scene.add(self.walls);\n        self.stlViewPort.scene.add(self.floor);\n\n        self.updatePrinterBed();\n\n        ko.applyBindings(self.slicingViewModel, $('#slicing-settings')[0]);\n\n        // Buttons on the canvas, and their behaviors.\n        // TODO: it's not DRY. mix of prez code and logics. need to figure out a better way\n        $(\"#slicer-viewport\").empty().append('<div class=\"report\"><span>Got issues or suggestions? <a target=\"_blank\" href=\"https://github.com/kennethjiang/OctoPrint-Slicer/issues/new\">Click here!</a></span></div>\\\n                  <div class=\"model\">\\\n                    <button class=\"translate disabled\" title=\"Move\"><img src=\"'\n            + PLUGIN_BASEURL\n            + 'slicer/static/img/translate.png\"></button>\\\n                    <button class=\"rotate disabled\" title=\"Rotate\"><img src=\"'\n            + PLUGIN_BASEURL\n            + 'slicer/static/img/rotate.png\"></button>\\\n                    <button class=\"scale disabled\" title=\"Scale\"><img src=\"'\n            + PLUGIN_BASEURL\n            + 'slicer/static/img/scale.png\"></button>\\\n                    <button class=\"remove disabled\" title=\"Remove\"><img src=\"'\n            + PLUGIN_BASEURL\n            + 'slicer/static/img/remove.png\"></button>\\\n                    <button class=\"split disabled\" title=\"Split\"><img src=\"'\n            + PLUGIN_BASEURL\n            + 'slicer/static/img/split.png\"></button>\\\n                </div>\\\n                <div class=\"values translate\">\\\n                    <div>\\\n                        <p><span class=\"axis x\">X</span><input type=\"number\" step=\"any\" name=\"x\"><span title=\"\">mm</span></p>\\\n                        <p><span class=\"axis y\">Y</span><input type=\"number\" step=\"any\" name=\"y\"><span title=\"\">mm</span></p>\\\n                        <span></span>\\\n                    </div>\\\n               </div>\\\n                <div class=\"values rotate\">\\\n                    <div>\\\n                        <p><span class=\"axis x\">X</span><input type=\"number\" step=\"any\" name=\"x\"><span title=\"\">°</span></p>\\\n                        <p><span class=\"axis y\">Y</span><input type=\"number\" step=\"any\" name=\"y\"><span title=\"\">°</span></p>\\\n                        <p><span class=\"axis z\">Z</span><input type=\"number\" step=\"any\" name=\"z\"><span title=\"\">°</span></p>\\\n                        <span></span>\\\n                    </div>\\\n               </div>\\\n                <div class=\"values scale\">\\\n                    <div>\\\n                        <p><span class=\"axis x\">X</span><input type=\"number\" step=\"0.001\" name=\"x\" min=\"0.001\"></p>\\\n                        <p><span class=\"axis y\">Y</span><input type=\"number\" step=\"0.001\" name=\"y\" min=\"0.001\"></p>\\\n                        <p><span class=\"axis z\">Z</span><input type=\"number\" step=\"0.001\" name=\"z\" min=\"0.001\"></p>\\\n                        <p class=\"checkbox\"><label><input type=\"checkbox\" checked>Lock</label></p>\\\n                        <span></span>\\\n                    </div>\\\n               </div>');\n\n        $(\"#slicer-viewport\").append(self.stlViewPort.renderer.domElement);\n\n        $(\"#slicer-viewport button.translate\").click(function(event) {\n            self.stlViewPort.transformControls.setMode(\"translate\");\n            self.stlViewPort.transformControls.space = \"world\";\n            self.toggleValueInputs($(\"#slicer-viewport .translate.values div\"));\n        });\n        $(\"#slicer-viewport button.rotate\").click(function(event) {\n            self.stlViewPort.transformControls.setMode(\"rotate\");\n            self.stlViewPort.transformControls.space = \"world\";\n            self.toggleValueInputs($(\"#slicer-viewport .rotate.values div\"));\n        });\n        $(\"#slicer-viewport button.scale\").click(function(event) {\n            self.stlViewPort.transformControls.setMode(\"scale\");\n            self.stlViewPort.transformControls.space = \"local\";\n            self.toggleValueInputs($(\"#slicer-viewport .scale.values div\"));\n        });\n        $(\"#slicer-viewport button.remove\").click(function(event) {\n            self.onModelRemove( self.stlViewPort.removeActiveModel() );\n        });\n        $(\"#slicer-viewport button.split\").click(function(event) {\n            self.onModelRemove( self.stlViewPort.splitActiveModel() );\n        });\n        $(\"#slicer-viewport .values input\").change(function() {\n            self.applyValueInputs($(this));\n        });\n\n    };\n\n    self.toggleValueInputs = function(parentDiv) {\n        if ( parentDiv.hasClass(\"show\") ) {\n            parentDiv.removeClass(\"show\").children('p').removeClass(\"show\");\n        } else if (self.stlViewPort.activeModel()) {\n            $(\"#slicer-viewport .values div\").removeClass(\"show\");\n            parentDiv.addClass(\"show\").children('p').addClass(\"show\");\n        }\n    };\n\n    self.applyValueInputs = function(input) {\n        input.blur();\n        if(input[0].type == \"checkbox\") {\n            self.lockScale = input[0].checked;\n        }\n        else if(input[0].type == \"number\" && !isNaN(parseFloat(input.val()))) {\n            input.val(parseFloat(input.val()).toFixed(3));\n            var model = self.stlViewPort.activeModel();\n\n            if (input.closest(\".values\").hasClass(\"scale\") && self.lockScale) {\n                $(\"#slicer-viewport .scale.values input\").val(input.val());\n                console.log($(\"#slicer-viewport .scale.values input[name=\\\"x\\\"]\").val());\n            }\n\n            model.position.x =  parseFloat($(\"#slicer-viewport .translate.values input[name=\\\"x\\\"]\").val())\n            model.position.y =  parseFloat($(\"#slicer-viewport .translate.values input[name=\\\"y\\\"]\").val())\n            model.rotation.x =  THREE.Math.degToRad($(\"#slicer-viewport .rotate.values input[name=\\\"x\\\"]\").val());\n            model.rotation.y =  THREE.Math.degToRad($(\"#slicer-viewport .rotate.values input[name=\\\"y\\\"]\").val());\n            model.rotation.z =  THREE.Math.degToRad($(\"#slicer-viewport .rotate.values input[name=\\\"z\\\"]\").val());\n            model.scale.x =  parseFloat($(\"#slicer-viewport .scale.values input[name=\\\"x\\\"]\").val())\n            model.scale.y =  parseFloat($(\"#slicer-viewport .scale.values input[name=\\\"y\\\"]\").val())\n            model.scale.z =  parseFloat($(\"#slicer-viewport .scale.values input[name=\\\"z\\\"]\").val())\n            self.fixZPosition(model);\n            self.stlViewPort.render();\n        }\n    };\n\n    self.fixZPosition = function ( model ) {\n        var bedLowMinZ = 0.0;\n        var boundaryBox = new THREE.Box3().setFromObject(model);\n        boundaryBox.min.sub(model.position);\n        boundaryBox.max.sub(model.position);\n        model.position.z -= model.position.z + boundaryBox.min.z - bedLowMinZ;\n    }\n\n    // callback function when models are changed by TransformControls\n    self.onModelChange = function() {\n        var model = self.stlViewPort.activeModel();\n        if (model) {\n            $(\"#slicer-viewport .translate.values input[name=\\\"x\\\"]\").val(model.position.x.toFixed(3)).attr(\"min\", '');\n            $(\"#slicer-viewport .translate.values input[name=\\\"y\\\"]\").val(model.position.y.toFixed(3)).attr(\"min\", '');\n            $(\"#slicer-viewport .rotate.values input[name=\\\"x\\\"]\").val((model.rotation.x * 180 / Math.PI).toFixed(3)).attr(\"min\", '');\n            $(\"#slicer-viewport .rotate.values input[name=\\\"y\\\"]\").val((model.rotation.y * 180 / Math.PI).toFixed(3)).attr(\"min\", '');\n            $(\"#slicer-viewport .rotate.values input[name=\\\"z\\\"]\").val((model.rotation.z * 180 / Math.PI).toFixed(3)).attr(\"min\", '');\n            $(\"#slicer-viewport .scale.values input[name=\\\"x\\\"]\").val(model.scale.x.toFixed(3)).attr(\"min\", '');\n            $(\"#slicer-viewport .scale.values input[name=\\\"y\\\"]\").val(model.scale.y.toFixed(3)).attr(\"min\", '');\n            $(\"#slicer-viewport .scale.values input[name=\\\"z\\\"]\").val(model.scale.z.toFixed(3)).attr(\"min\", '');\n            $(\"#slicer-viewport .scale.values input[type=\\\"checkbox\\\"]\").checked = self.lockScale;\n            self.fixZPosition(model);\n            self.stlViewPort.render();\n        }\n\n        if (!self.stlViewPort.activeModel()) {\n            $(\"#slicer-viewport .values div\").removeClass(\"show\")\n            $(\"#slicer-viewport button\").addClass(\"disabled\");\n        } else {\n            $(\"#slicer-viewport button\").removeClass(\"disabled\");\n        }\n    };\n\n    // Slicing\n    //\n    self.tempFiles = {};\n    self.removeTempFilesAfterSlicing = function (event) {\n        if ($.inArray(event.data.type, [\"SlicingDone\", \"SlicingFailed\"]) >= 0 &&\n            event.data.payload.stl in self.tempFiles) {\n            OctoPrint.files.delete(event.data.payload.stl_location,\n                event.data.payload.stl);\n            delete self.tempFiles[event.data.payload.stl];\n        }\n    }\n\n    OctoPrint.socket.onMessage(\"event\", self.removeTempFilesAfterSlicing);\n\n    self.sliceRequestData = function(slicingVM, group) {\n        var destinationFilename = slicingVM._sanitize(slicingVM.destinationFilename());\n\n        var destinationExtensions = slicingVM.data[slicingVM.slicer()] && slicingVM.data[slicingVM.slicer()].extensions && slicingVM.data[slicingVM.slicer()].extensions.destination\n            ? slicingVM.data[slicingVM.slicer()].extensions.destination\n            : [\"???\"];\n        if (!_.any(destinationExtensions, function(extension) {\n            return _.endsWith(destinationFilename.toLowerCase(), \".\" + extension.toLowerCase());\n        })) {\n            destinationFilename = destinationFilename + \".\" + destinationExtensions[0];\n        }\n        var groupCenter = new THREE.Vector3(0,0,0);\n        if (group) {\n            groupCenter = new THREE.Box3().setFromObject(group).center();\n        }\n        var data = {\n            command: \"slice\",\n            slicer: slicingVM.slicer(),\n            profile: slicingVM.profile(),\n            printerProfile: slicingVM.printerProfile(),\n            destination: destinationFilename,\n            position: { \"x\": self.ORIGIN_OFFSET_X_MM + groupCenter.x,\n                \"y\": self.ORIGIN_OFFSET_Y_MM + groupCenter.y}\n        };\n        _.extend(data, self.overridesViewModel.toJS());\n\n        if (slicingVM.afterSlicing() == \"print\") {\n            data[\"print\"] = true;\n        } else if (slicingVM.afterSlicing() == \"select\") {\n            data[\"select\"] = true;\n        }\n        return data;\n    };\n\n    self.sendSliceRequest = function(target, filename, data) {\n        $.ajax({\n            url: API_BASEURL + \"files/\" + target + \"/\" + filename,\n            type: \"POST\",\n            dataType: \"json\",\n            contentType: \"application/json; charset=UTF-8\",\n            data: JSON.stringify(data),\n            error: function(jqXHR, textStatus) {\n                new PNotify({title: \"Slicing failed\", text: textStatus, type: \"error\", hide: false});\n            }\n        });\n    };\n\n    self.slice = function() {\n        mixpanel.track(\"Slice Model\");\n\n        var target = self.slicingViewModel.target;\n        var sliceRequestData;\n\n        if (self.stlViewPort.onlyOneOriginalModel()) {\n\n            sliceRequestData = self.sliceRequestData(self.slicingViewModel);\n            self.sendSliceRequest(self.slicingViewModel.target, self.slicingViewModel.file(), sliceRequestData);\n\n        } else {\n\n            var form = new FormData();\n            var group = new THREE.Group();\n            _.forEach(self.stlViewPort.models, function (model) {\n                group.add(model.clone(true));\n            });\n\n            sliceRequestData = self.sliceRequestData(self.slicingViewModel, group);\n\n            var tempFilename = self.tempSTLFilename();\n            form.append(\"file\", self.blobFromModel(group), tempFilename);\n            $.ajax({\n                url: API_BASEURL + \"files/local\",\n                type: \"POST\",\n                data: form,\n                processData: false,\n                contentType: false,\n                // On success\n                success: function(_) {\n                    self.tempFiles[tempFilename] = 1;\n                    self.sendSliceRequest(target, tempFilename, sliceRequestData);\n                },\n                error: function(jqXHR, textStatus) {\n                    new PNotify({title: \"Slicing failed\", text: textStatus, type: \"error\", hide: false});\n                }\n            });\n\n        }\n    };\n\n    self.blobFromModel = function( model ) {\n        var exporter = new THREE.STLBinaryExporter();\n        return new Blob([exporter.parse(model)], {type: \"text/plain\"});\n    };\n\n    self.isPrinting = ko.computed(function () {\n        return self.printerStateViewModel.isPrinting() ||\n            self.printerStateViewModel.isPaused();\n    });\n\n    self.canSliceNow = ko.computed(function () {\n        // TODO: We should be checking for same_device here, too.\n        return self.slicingViewModel.enableSliceButton() &&\n            !self.isPrinting();\n    });\n    // END: Slicing\n\n    // Helpers for drawing walls and floor\n    //\n    self.createText = function(font, text, width, depth, parentObj) {\n        var textGeometry = new THREE.TextGeometry( text, {\n            font: font,\n            size: 10,\n            height: 0.1,\n            material: 0, extrudeMaterial: 1\n        });\n        var materialFront = new THREE.MeshBasicMaterial( { color: 0x048e06} );\n        var materialSide = new THREE.MeshBasicMaterial( { color: 0x8A8A8A} );\n        var materialArray = [ materialFront, materialSide ];\n        var textMaterial = new THREE.MeshFaceMaterial(materialArray);\n\n        var mesh = new THREE.Mesh( textGeometry, textMaterial );\n        textGeometry.computeBoundingBox();\n        var textWidth = textGeometry.boundingBox.max.x - textGeometry.boundingBox.min.x;\n        var textHeight = textGeometry.boundingBox.max.y - textGeometry.boundingBox.min.y;\n        switch (text) {\n            case \"Front\":\n                mesh.position.set(-textWidth/2, -depth/2 - textHeight - 4, 1.0);\n                break;\n            case \"Back\":\n                mesh.position.set(textWidth/2, depth/2 + textHeight + 4, 1.0);\n                mesh.rotation.set(0, 0, Math.PI);\n                break;\n            case \"Left\":\n                mesh.position.set(-width/2 - textHeight - 4, textWidth/2, 1.0);\n                mesh.rotation.set(0, 0, -Math.PI / 2);\n                break;\n            case \"Right\":\n                mesh.position.set(width/2 + textHeight, -textWidth/2, 1.0);\n                mesh.rotation.set(0, 0, Math.PI / 2);\n                break;\n        }\n        parentObj.add(mesh);\n    };\n\n    self.drawBedFloor = function ( width, depth, segments ) {\n        for(var i = self.floor.children.length - 1; i >= 0; i--) {\n            var obj = self.floor.children[i];\n            self.floor.remove(obj);\n        }\n\n        segments = segments || 20;\n        var geometry = new THREE.PlaneGeometry(width, depth, segments, segments);\n        var materialEven = new THREE.MeshBasicMaterial({color: 0xccccfc});\n        var materialOdd = new THREE.MeshBasicMaterial({color: 0x444464});\n        var materials = [materialEven, materialOdd];\n        for (var x = 0; x < segments; x++) {\n            for (var y = 0; y < segments; y++) {\n                var i = x * segments + y;\n                var j = 2 * i;\n                geometry.faces[ j ].materialIndex = geometry.faces[ j + 1 ].materialIndex = (x + y) % 2;\n            }\n        }\n        var mesh = new THREE.Mesh(geometry, new THREE.MeshFaceMaterial(materials));\n        mesh.receiveShadow = true;\n        self.floor.add(mesh);\n\n        //Add text to indicate front/back of print bed\n        var loader = new THREE.FontLoader();\n        loader.load( PLUGIN_BASEURL + \"slicer/static/js/optimer_bold.typeface.json\", function ( font ) {\n            self.createText(font, \"Front\", width, depth, self.floor);\n            self.createText(font, \"Back\", width, depth, self.floor);\n            self.createText(font, \"Left\", width, depth, self.floor);\n            self.createText(font, \"Right\", width, depth, self.floor);\n            self.stlViewPort.render();\n        } );\n    };\n\n    self.drawWalls = function ( width, depth, height ) {\n        for(var i = self.walls.children.length - 1; i >= 0; i--) {\n            var obj = self.walls.children[i];\n            self.walls.remove(obj);\n        }\n\n        var wall1 = self.rectShape( width, height, 0x8888fc );\n        wall1.rotation.x = Math.PI / 2;\n        wall1.position.set(0, depth/2, height/2);\n        self.walls.add(wall1);\n\n        var wall2 = self.rectShape( height, depth, 0x8888dc );\n        wall2.rotation.y = Math.PI / 2;\n        wall2.position.set(-width/2, 0, height/2);\n        self.walls.add(wall2);\n\n        var wall3 = self.rectShape( width, height, 0x8888fc );\n        wall3.rotation.x = -Math.PI / 2;\n        wall3.position.set(0, -depth/2, height/2);\n        self.walls.add(wall3);\n\n        var wall4 = self.rectShape( height, depth, 0x8888dc );\n        wall4.rotation.y = -Math.PI / 2;\n        wall4.position.set(width/2, 0, height/2);\n        self.walls.add(wall4);\n    };\n\n    self.rectShape = function ( rectLength, rectWidth, color ) {\n        var rectShape = new THREE.Shape();\n        rectShape.moveTo( -rectLength/2,-rectWidth/2 );\n        rectShape.lineTo( -rectLength/2, rectWidth/2 );\n        rectShape.lineTo( rectLength/2, rectWidth/2 );\n        rectShape.lineTo( rectLength/2, -rectWidth/2 );\n        rectShape.lineTo( -rectLength/2, -rectWidth/2 );\n        var rectGeom = new THREE.ShapeGeometry( rectShape );\n        return new THREE.Mesh( rectGeom, new THREE.MeshBasicMaterial( { color: color } ) ) ;\n    };\n    // END: Helpers for drawing walls and floor\n\n    self.resetSlicingViewModel = function() {\n        self.slicingViewModel.target = undefined;\n        self.slicingViewModel.file(undefined);\n        self.slicingViewModel.destinationFilename(undefined);\n    };\n\n    self.setSlicingViewModel = function(target, filename) {\n        if (!self.slicingViewModel.destinationFilename()) {  // A model is added to an empty bed\n            self.slicingViewModel.target = target;\n            self.slicingViewModel.file(filename);\n            self.slicingViewModel.destinationFilename(self.computeDestinationFilename(filename));\n        }\n    };\n\n    // Returns the destination filename based on which models are loaded.\n    // The destination filename is without the final .gco on it because\n    // that will depend on the slicer.\n    self.computeDestinationFilename = function(inputFilename) {\n        // TODO: For now, just use the first model's name.\n        var destinationFilename = inputFilename.substr(0, inputFilename.lastIndexOf(\".\"));\n        if (destinationFilename.lastIndexOf(\"/\") != 0) {\n            destinationFilename = destinationFilename.substr(destinationFilename.lastIndexOf(\"/\") + 1);\n        }\n        return destinationFilename;\n    };\n\n    self.tempSTLFilename = function() {\n        var pos = self.slicingViewModel.file().lastIndexOf(\".\")\n        return [self.slicingViewModel.file().slice(0, pos),\n            \".tmp.\" + (+ new Date()),\n            self.slicingViewModel.file().slice(pos)].join('');\n    };\n\n    self.init();\n}\n\n\n// view model class, parameters for constructor, container to bind to\nOCTOPRINT_VIEWMODELS.push([\n    SlicerViewModel,\n\n    // e.g. loginStateViewModel, settingsViewModel, ...\n    [ \"slicingViewModel\", \"overridesViewModel\", \"printerStateViewModel\", \"printerProfilesViewModel\" ],\n\n    // e.g. #settings_plugin_slicer, #tab_plugin_slicer, ...\n    [ \"#slicer\" ]\n]);\n"],"names":["THREE","STLViewPort","canvas","width","height","onChange","onNewModel","self","canvasWidth","canvasHeight","models","effectController","Color","init","camera","PerspectiveCamera","up","set","position","scene","Scene","ambientLight","AmbientLight","ambientLightColor","add","directionalLight","DirectionalLight","directionalLightColor","directionalLight2","renderer","WebGLRenderer","antialias","setClearColor","setSize","setPixelRatio","window","devicePixelRatio","gammaInput","gammaOutput","orbitControls","OrbitControls","domElement","enableDamping","dampingFactor","enablePan","addEventListener","render","transformControls","THREETK","setRotationSnap","Math","degToRad","startTransform","endTransform","event","keyCode","lastMouseEvent","e","pickActiveModel","update","loadSTL","url","onLoad","STLLoader","load","geometry","addModelOfGeometry","modelToCopyTransformFrom","material","MeshStandardMaterial","modelInactiveColor","SmoothShading","DoubleSide","metalness","roughness","stlModel","Mesh","center","Box3","setFromObject","model","Object3D","copy","negate","rotation","scale","push","activeModel","object","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","pointerVector","Vector2","ray","Raycaster","setFromCamera","foundActiveModel","nextPointedModel","undefined","firstPointedModel","i","length","intersections","intersectObjects","children","makeModelActive","m","attach","detach","color","modelActiveColor","removeActiveModel","index","indexOf","splice","remove","removeAllModels","splitActiveModel","originalModel","newGeometries","GeometryUtils","split","map","onlyOneOriginalModel","z","enabled","ko","bindingHandlers","numericValue","element","valueAccessor","allBindings","data","context","interceptor","computed","unwrap","value","isNaN","parseFloat","applyBindingsToNode","OverridesViewModel","parameters","array_keys","enum_keys","item_keys","boolean_keys","slicingViewModel","ARRAY_KEYS","ENUM_KEYS","observableArray","ITEM_KEYS","BOOLEAN_KEYS","ALL_KEYS","concat","Object","keys","forEach","k","observable","optionsForKey","key","updateOverridesFromProfile","profile","endings","stripEndings","_","isString","endsWith","slice","booleans","convertBoolean","BOOLS","boolType","b","isArray","v","onProfileChange","newValue","slicing","slicer","fetchSlicingProfile","profileAjax","abort","$","ajax","API_BASEURL","subscribe","toJS","result","mapping","hasOwnProperty","baseKey","replace","contains","OCTOPRINT_VIEWMODELS","location","hostname","config","install","SlicerViewModel","track","document","getElementById","Detector","webgl","empty","append","overridesViewModel","printerStateViewModel","printerProfilesViewModel","lockScale","selectedSTL","newPrint","show","target","file","force","enableSlicingDialog","tab","addToNewPrint","modal","clearPrint","addToExistingPrint","setSlicingViewModel","addSTL","resetSlicingViewModel","stlViewPort","BASEURL","onModelAdd","fixZPosition","arrange","hide","onModelRemove","updatePrinterBed","profileName","profiles","items","find","p","id","dim","volume","BEDSIZE_X_MM","BEDSIZE_Y_MM","depth","BEDSIZE_Z_MM","origin","ORIGIN_OFFSET_X_MM","ORIGIN_OFFSET_Y_MM","drawBedFloor","drawWalls","printerProfile","CANVAS_WIDTH","CANVAS_HEIGHT","requestData","onModelChange","walls","floor","applyBindings","PLUGIN_BASEURL","click","setMode","space","toggleValueInputs","change","applyValueInputs","parentDiv","hasClass","removeClass","addClass","input","blur","type","checked","val","toFixed","closest","log","bedLowMinZ","boundaryBox","min","sub","max","attr","PI","tempFiles","removeTempFilesAfterSlicing","inArray","payload","stl","files","delete","stl_location","socket","onMessage","sliceRequestData","slicingVM","group","destinationFilename","_sanitize","destinationExtensions","extensions","destination","any","extension","toLowerCase","groupCenter","Vector3","extend","afterSlicing","sendSliceRequest","filename","JSON","stringify","jqXHR","textStatus","PNotify","title","text","form","FormData","Group","clone","tempFilename","tempSTLFilename","blobFromModel","exporter","STLBinaryExporter","Blob","parse","isPrinting","isPaused","canSliceNow","enableSliceButton","createText","font","parentObj","textGeometry","TextGeometry","extrudeMaterial","materialFront","MeshBasicMaterial","materialSide","materialArray","textMaterial","MeshFaceMaterial","mesh","computeBoundingBox","textWidth","boundingBox","textHeight","segments","obj","PlaneGeometry","materialEven","materialOdd","materials","j","faces","materialIndex","receiveShadow","loader","FontLoader","wall1","rectShape","wall2","wall3","wall4","rectLength","rectWidth","Shape","moveTo","lineTo","rectGeom","ShapeGeometry","computeDestinationFilename","inputFilename","substr","lastIndexOf","pos","Date","join"],"mappings":"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"}