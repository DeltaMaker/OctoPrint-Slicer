{"version":3,"file":null,"sources":["../../../node_modules/3tk/dist/3tk.es2015.js","../../../src/STLViewPort.js","../../../src/slicer.js"],"sourcesContent":["import THREE from 'three';\n\n/**\n * @author arodic / https://github.com/arodic\n */\n\nfunction DefaultHandles() {\n\n    var GizmoMaterial = function GizmoMaterial(parameters) {\n\n        THREE.MeshBasicMaterial.call(this);\n\n        this.depthTest = false;\n        this.depthWrite = false;\n        this.side = THREE.FrontSide;\n        this.transparent = true;\n\n        this.setValues(parameters);\n\n        this.oldColor = this.color.clone();\n        this.oldOpacity = this.opacity;\n\n        this.highlight = function (highlighted) {\n\n            if (highlighted) {\n\n                this.color.setRGB(1, 1, 0);\n                this.opacity = 1;\n            } else {\n\n                this.color.copy(this.oldColor);\n                this.opacity = this.oldOpacity;\n            }\n        };\n    };\n\n    GizmoMaterial.prototype = Object.create(THREE.MeshBasicMaterial.prototype);\n    GizmoMaterial.prototype.constructor = GizmoMaterial;\n\n    var GizmoLineMaterial = function GizmoLineMaterial(parameters) {\n\n        THREE.LineBasicMaterial.call(this);\n\n        this.depthTest = false;\n        this.depthWrite = false;\n        this.transparent = true;\n        this.linewidth = 1;\n\n        this.setValues(parameters);\n\n        this.oldColor = this.color.clone();\n        this.oldOpacity = this.opacity;\n\n        this.highlight = function (highlighted) {\n\n            if (highlighted) {\n\n                this.color.setRGB(1, 1, 0);\n                this.opacity = 1;\n            } else {\n\n                this.color.copy(this.oldColor);\n                this.opacity = this.oldOpacity;\n            }\n        };\n    };\n\n    GizmoLineMaterial.prototype = Object.create(THREE.LineBasicMaterial.prototype);\n    GizmoLineMaterial.prototype.constructor = GizmoLineMaterial;\n\n    var invisibleMaterial = new GizmoMaterial({ visible: false, transparent: false });\n\n    var gizmoFromMap = function gizmoFromMap(gizmoMap) {\n\n        var gizmo = new THREE.Object3D();\n\n        for (var name in gizmoMap) {\n\n            for (var i = gizmoMap[name].length; i--;) {\n\n                var object = gizmoMap[name][i][0];\n                var position = gizmoMap[name][i][1];\n                var rotation = gizmoMap[name][i][2];\n\n                object.name = name;\n\n                if (position) object.position.set(position[0], position[1], position[2]);\n                if (rotation) object.rotation.set(rotation[0], rotation[1], rotation[2]);\n\n                gizmo.add(object);\n            }\n        }\n\n        return gizmo;\n    };\n\n    this.translateHandles = function () {\n        var arrowGeometry = new THREE.Geometry();\n        var mesh = new THREE.Mesh(new THREE.CylinderGeometry(0, 0.05, 0.2, 12, 1, false));\n        mesh.position.y = 0.5;\n        mesh.updateMatrix();\n\n        arrowGeometry.merge(mesh.geometry, mesh.matrix);\n\n        var lineXGeometry = new THREE.BufferGeometry();\n        lineXGeometry.addAttribute('position', new THREE.Float32BufferAttribute([0, 0, 0, 1, 0, 0], 3));\n\n        var lineYGeometry = new THREE.BufferGeometry();\n        lineYGeometry.addAttribute('position', new THREE.Float32BufferAttribute([0, 0, 0, 0, 1, 0], 3));\n\n        var lineZGeometry = new THREE.BufferGeometry();\n        lineZGeometry.addAttribute('position', new THREE.Float32BufferAttribute([0, 0, 0, 0, 0, 1], 3));\n\n        return gizmoFromMap({\n            X: [[new THREE.Mesh(arrowGeometry, new GizmoMaterial({ color: 0xff0000 })), [0.5, 0, 0], [0, 0, -Math.PI / 2]], [new THREE.Line(lineXGeometry, new GizmoLineMaterial({ color: 0xff0000 }))], [new THREE.Mesh(new THREE.CylinderBufferGeometry(0.2, 0, 1, 4, 1, false), invisibleMaterial), [0.6, 0, 0], [0, 0, -Math.PI / 2]]],\n\n            Y: [[new THREE.Mesh(arrowGeometry, new GizmoMaterial({ color: 0x00ff00 })), [0, 0.5, 0]], [new THREE.Line(lineYGeometry, new GizmoLineMaterial({ color: 0x00ff00 }))], [new THREE.Mesh(new THREE.CylinderBufferGeometry(0.2, 0, 1, 4, 1, false), invisibleMaterial), [0, 0.6, 0]]],\n\n            Z: [[new THREE.Mesh(arrowGeometry, new GizmoMaterial({ color: 0x0000ff })), [0, 0, 0.5], [Math.PI / 2, 0, 0]], [new THREE.Line(lineZGeometry, new GizmoLineMaterial({ color: 0x0000ff }))], [new THREE.Mesh(new THREE.CylinderBufferGeometry(0.2, 0, 1, 4, 1, false), invisibleMaterial), [0, 0, 0.6], [Math.PI / 2, 0, 0]]],\n\n            XYZ: [[new THREE.Mesh(new THREE.OctahedronGeometry(0.1, 0), new GizmoMaterial({ color: 0xffffff, opacity: 0.25 })), [0, 0, 0], [0, 0, 0]], [new THREE.Mesh(new THREE.OctahedronGeometry(0.2, 0), invisibleMaterial)]],\n\n            XY: [[new THREE.Mesh(new THREE.PlaneBufferGeometry(0.29, 0.29), new GizmoMaterial({ color: 0xffff00, opacity: 0.25 })), [0.15, 0.15, 0]], [new THREE.Mesh(new THREE.PlaneBufferGeometry(0.4, 0.4), invisibleMaterial), [0.2, 0.2, 0]]],\n\n            YZ: [[new THREE.Mesh(new THREE.PlaneBufferGeometry(0.29, 0.29), new GizmoMaterial({ color: 0x00ffff, opacity: 0.25 })), [0, 0.15, 0.15], [0, Math.PI / 2, 0]], [new THREE.Mesh(new THREE.PlaneBufferGeometry(0.4, 0.4), invisibleMaterial), [0, 0.2, 0.2], [0, Math.PI / 2, 0]]],\n\n            XZ: [[new THREE.Mesh(new THREE.PlaneBufferGeometry(0.29, 0.29), new GizmoMaterial({ color: 0xff00ff, opacity: 0.25 })), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]], [new THREE.Mesh(new THREE.PlaneBufferGeometry(0.4, 0.4), invisibleMaterial), [0.2, 0, 0.2], [-Math.PI / 2, 0, 0]]]\n\n        });\n    };\n\n    this.rotateHandles = function () {\n\n        var CircleGeometry = function CircleGeometry(radius, facing, arc) {\n\n            var geometry = new THREE.BufferGeometry();\n            var vertices = [];\n            arc = arc ? arc : 1;\n\n            for (var i = 0; i <= 64 * arc; ++i) {\n\n                if (facing === 'x') vertices.push(0, Math.cos(i / 32 * Math.PI) * radius, Math.sin(i / 32 * Math.PI) * radius);\n                if (facing === 'y') vertices.push(Math.cos(i / 32 * Math.PI) * radius, 0, Math.sin(i / 32 * Math.PI) * radius);\n                if (facing === 'z') vertices.push(Math.sin(i / 32 * Math.PI) * radius, Math.cos(i / 32 * Math.PI) * radius, 0);\n            }\n\n            geometry.addAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\n            return geometry;\n        };\n\n        return gizmoFromMap({\n            X: [[new THREE.Line(new CircleGeometry(1, 'x', 0.5), new GizmoLineMaterial({ color: 0xff0000 }))], [new THREE.Mesh(new THREE.TorusBufferGeometry(1, 0.12, 4, 12, Math.PI), invisibleMaterial), [0, 0, 0], [0, -Math.PI / 2, -Math.PI / 2]]],\n\n            Y: [[new THREE.Line(new CircleGeometry(1, 'y', 0.5), new GizmoLineMaterial({ color: 0x00ff00 }))], [new THREE.Mesh(new THREE.TorusBufferGeometry(1, 0.12, 4, 12, Math.PI), invisibleMaterial), [0, 0, 0], [Math.PI / 2, 0, 0]]],\n\n            Z: [[new THREE.Line(new CircleGeometry(1, 'z', 0.5), new GizmoLineMaterial({ color: 0x0000ff }))], [new THREE.Mesh(new THREE.TorusBufferGeometry(1, 0.12, 4, 12, Math.PI), invisibleMaterial), [0, 0, 0], [0, 0, -Math.PI / 2]]],\n\n            E: [[new THREE.Line(new CircleGeometry(1.25, 'z', 1), new GizmoLineMaterial({ color: 0xcccc00 }))], [new THREE.Mesh(new THREE.TorusBufferGeometry(1.25, 0.12, 2, 24), invisibleMaterial)]],\n\n            XYZE: [[new THREE.Line(new CircleGeometry(1, 'z', 1), new GizmoLineMaterial({ color: 0x787878 }))], [new THREE.Mesh()] // TODO\n            ]\n        });\n    };\n\n    this.scaleHandles = function () {\n        var arrowGeometry = new THREE.Geometry();\n        var mesh = new THREE.Mesh(new THREE.BoxGeometry(0.125, 0.125, 0.125));\n        mesh.position.y = 0.5;\n        mesh.updateMatrix();\n\n        arrowGeometry.merge(mesh.geometry, mesh.matrix);\n\n        var lineXGeometry = new THREE.BufferGeometry();\n        lineXGeometry.addAttribute('position', new THREE.Float32BufferAttribute([0, 0, 0, 1, 0, 0], 3));\n\n        var lineYGeometry = new THREE.BufferGeometry();\n        lineYGeometry.addAttribute('position', new THREE.Float32BufferAttribute([0, 0, 0, 0, 1, 0], 3));\n\n        var lineZGeometry = new THREE.BufferGeometry();\n        lineZGeometry.addAttribute('position', new THREE.Float32BufferAttribute([0, 0, 0, 0, 0, 1], 3));\n\n        return gizmoFromMap({\n            X: [[new THREE.Mesh(arrowGeometry, new GizmoMaterial({ color: 0xff0000 })), [0.5, 0, 0], [0, 0, -Math.PI / 2]], [new THREE.Line(lineXGeometry, new GizmoLineMaterial({ color: 0xff0000 }))], [new THREE.Mesh(new THREE.CylinderBufferGeometry(0.2, 0, 1, 4, 1, false), invisibleMaterial), [0.6, 0, 0], [0, 0, -Math.PI / 2]]],\n\n            Y: [[new THREE.Mesh(arrowGeometry, new GizmoMaterial({ color: 0x00ff00 })), [0, 0.5, 0]], [new THREE.Line(lineYGeometry, new GizmoLineMaterial({ color: 0x00ff00 }))], [new THREE.Mesh(new THREE.CylinderBufferGeometry(0.2, 0, 1, 4, 1, false), invisibleMaterial), [0, 0.6, 0]]],\n\n            Z: [[new THREE.Mesh(arrowGeometry, new GizmoMaterial({ color: 0x0000ff })), [0, 0, 0.5], [Math.PI / 2, 0, 0]], [new THREE.Line(lineZGeometry, new GizmoLineMaterial({ color: 0x0000ff }))], [new THREE.Mesh(new THREE.CylinderBufferGeometry(0.2, 0, 1, 4, 1, false), invisibleMaterial), [0, 0, 0.6], [Math.PI / 2, 0, 0]]],\n\n            XYZ: [[new THREE.Mesh(new THREE.BoxBufferGeometry(0.125, 0.125, 0.125), new GizmoMaterial({ color: 0xffffff, opacity: 0.25 }))], [new THREE.Mesh(new THREE.BoxBufferGeometry(0.4, 0.4, 0.4), invisibleMaterial)]]\n        });\n    };\n}\n\nvar defaultHandles = new DefaultHandles();\n\nfunction TransformGizmo() {\n\n    this.init = function () {\n\n        THREE.Object3D.call(this);\n\n        this.add(this.handles);\n\n        this.planes = new THREE.Object3D();\n        this.add(this.planes);\n\n        //// PLANES\n\n        var planeGeometry = new THREE.PlaneBufferGeometry(50, 50, 2, 2);\n        var planeMaterial = new THREE.MeshBasicMaterial({ visible: false, side: THREE.DoubleSide });\n\n        var planes = {\n            \"XY\": new THREE.Mesh(planeGeometry, planeMaterial),\n            \"YZ\": new THREE.Mesh(planeGeometry, planeMaterial),\n            \"XZ\": new THREE.Mesh(planeGeometry, planeMaterial),\n            \"XYZE\": new THREE.Mesh(planeGeometry, planeMaterial)\n        };\n\n        this.activePlane = planes[\"XYZE\"];\n\n        planes[\"YZ\"].rotation.set(0, Math.PI / 2, 0);\n        planes[\"XZ\"].rotation.set(-Math.PI / 2, 0, 0);\n\n        for (var i in planes) {\n\n            planes[i].name = i;\n            this.planes.add(planes[i]);\n            this.planes[i] = planes[i];\n        }\n\n        // reset Transformations\n\n        this.traverse(function (child) {\n\n            if (child instanceof THREE.Mesh) {\n\n                child.updateMatrix();\n\n                var tempGeometry = child.geometry.clone();\n                tempGeometry.applyMatrix(child.matrix);\n                child.geometry = tempGeometry;\n\n                child.position.set(0, 0, 0);\n                child.rotation.set(0, 0, 0);\n                child.scale.set(1, 1, 1);\n            }\n        });\n    };\n\n    this.highlight = function (axis) {\n\n        this.traverse(function (child) {\n\n            if (child.material && child.material.highlight) {\n\n                if (child.name === axis) {\n\n                    child.material.highlight(true);\n                } else {\n\n                    child.material.highlight(false);\n                }\n            }\n        });\n    };\n}\n\nTransformGizmo.prototype = Object.create(THREE.Object3D.prototype);\nTransformGizmo.prototype.constructor = THREE.TransformGizmo;\n\nTransformGizmo.prototype.update = function (rotation, eye) {\n\n    var vec1 = new THREE.Vector3(0, 0, 0);\n    var vec2 = new THREE.Vector3(0, 1, 0);\n    var lookAtMatrix = new THREE.Matrix4();\n\n    this.traverse(function (child) {\n\n        if (child.name.search(\"E\") !== -1) {\n\n            child.quaternion.setFromRotationMatrix(lookAtMatrix.lookAt(eye, vec1, vec2));\n        } else if (child.name.search(\"X\") !== -1 || child.name.search(\"Y\") !== -1 || child.name.search(\"Z\") !== -1) {\n\n            child.quaternion.setFromEuler(rotation);\n        }\n    });\n};\n\nfunction TransformGizmoTranslate() {\n\n    TransformGizmo.call(this);\n\n    this.handles = defaultHandles.translateHandles();\n\n    this.setActivePlane = function (axis, eye) {\n\n        var tempMatrix = new THREE.Matrix4();\n        eye.applyMatrix4(tempMatrix.getInverse(tempMatrix.extractRotation(this.planes[\"XY\"].matrixWorld)));\n\n        if (axis === \"X\") {\n\n            this.activePlane = this.planes[\"XY\"];\n\n            if (Math.abs(eye.y) > Math.abs(eye.z)) this.activePlane = this.planes[\"XZ\"];\n        }\n\n        if (axis === \"Y\") {\n\n            this.activePlane = this.planes[\"XY\"];\n\n            if (Math.abs(eye.x) > Math.abs(eye.z)) this.activePlane = this.planes[\"YZ\"];\n        }\n\n        if (axis === \"Z\") {\n\n            this.activePlane = this.planes[\"XZ\"];\n\n            if (Math.abs(eye.x) > Math.abs(eye.y)) this.activePlane = this.planes[\"YZ\"];\n        }\n\n        if (axis === \"XYZ\") this.activePlane = this.planes[\"XYZE\"];\n\n        if (axis === \"XY\") this.activePlane = this.planes[\"XY\"];\n\n        if (axis === \"YZ\") this.activePlane = this.planes[\"YZ\"];\n\n        if (axis === \"XZ\") this.activePlane = this.planes[\"XZ\"];\n    };\n\n    this.init();\n}\n\nTransformGizmoTranslate.prototype = Object.create(TransformGizmo.prototype);\nTransformGizmoTranslate.prototype.constructor = TransformGizmoTranslate;\n\nfunction TransformGizmoRotate() {\n\n    TransformGizmo.call(this);\n\n    this.handles = defaultHandles.rotateHandles();\n\n    this.setActivePlane = function (axis) {\n\n        if (axis === \"E\") this.activePlane = this.planes[\"XYZE\"];\n\n        if (axis === \"X\") this.activePlane = this.planes[\"YZ\"];\n\n        if (axis === \"Y\") this.activePlane = this.planes[\"XZ\"];\n\n        if (axis === \"Z\") this.activePlane = this.planes[\"XY\"];\n    };\n\n    this.update = function (rotation, eye2) {\n\n        TransformGizmo.prototype.update.apply(this, arguments);\n\n        var group = {\n\n            handles: this[\"handles\"]\n\n        };\n\n        var tempMatrix = new THREE.Matrix4();\n        var worldRotation = new THREE.Euler(0, 0, 1);\n        var tempQuaternion = new THREE.Quaternion();\n        var unitX = new THREE.Vector3(1, 0, 0);\n        var unitY = new THREE.Vector3(0, 1, 0);\n        var unitZ = new THREE.Vector3(0, 0, 1);\n        var quaternionX = new THREE.Quaternion();\n        var quaternionY = new THREE.Quaternion();\n        var quaternionZ = new THREE.Quaternion();\n        var eye = eye2.clone();\n\n        worldRotation.copy(this.planes[\"XY\"].rotation);\n        tempQuaternion.setFromEuler(worldRotation);\n\n        tempMatrix.makeRotationFromQuaternion(tempQuaternion).getInverse(tempMatrix);\n        eye.applyMatrix4(tempMatrix);\n\n        this.traverse(function (child) {\n\n            tempQuaternion.setFromEuler(worldRotation);\n\n            if (child.name === \"X\") {\n\n                quaternionX.setFromAxisAngle(unitX, Math.atan2(-eye.y, eye.z));\n                tempQuaternion.multiplyQuaternions(tempQuaternion, quaternionX);\n                child.quaternion.copy(tempQuaternion);\n            }\n\n            if (child.name === \"Y\") {\n\n                quaternionY.setFromAxisAngle(unitY, Math.atan2(eye.x, eye.z));\n                tempQuaternion.multiplyQuaternions(tempQuaternion, quaternionY);\n                child.quaternion.copy(tempQuaternion);\n            }\n\n            if (child.name === \"Z\") {\n\n                quaternionZ.setFromAxisAngle(unitZ, Math.atan2(eye.y, eye.x));\n                tempQuaternion.multiplyQuaternions(tempQuaternion, quaternionZ);\n                child.quaternion.copy(tempQuaternion);\n            }\n        });\n    };\n\n    this.init();\n}\n\nTransformGizmoRotate.prototype = Object.create(TransformGizmo.prototype);\nTransformGizmoRotate.prototype.constructor = TransformGizmoRotate;\n\nfunction TransformGizmoScale() {\n\n    TransformGizmo.call(this);\n\n    this.handles = defaultHandles.scaleHandles();\n\n    this.setActivePlane = function (axis, eye) {\n\n        var tempMatrix = new THREE.Matrix4();\n        eye.applyMatrix4(tempMatrix.getInverse(tempMatrix.extractRotation(this.planes[\"XY\"].matrixWorld)));\n\n        if (axis === \"X\") {\n\n            this.activePlane = this.planes[\"XY\"];\n            if (Math.abs(eye.y) > Math.abs(eye.z)) this.activePlane = this.planes[\"XZ\"];\n        }\n\n        if (axis === \"Y\") {\n\n            this.activePlane = this.planes[\"XY\"];\n            if (Math.abs(eye.x) > Math.abs(eye.z)) this.activePlane = this.planes[\"YZ\"];\n        }\n\n        if (axis === \"Z\") {\n\n            this.activePlane = this.planes[\"XZ\"];\n            if (Math.abs(eye.x) > Math.abs(eye.y)) this.activePlane = this.planes[\"YZ\"];\n        }\n\n        if (axis === \"XYZ\") this.activePlane = this.planes[\"XYZE\"];\n    };\n\n    this.init();\n}\n\nTransformGizmoScale.prototype = Object.create(TransformGizmo.prototype);\nTransformGizmoScale.prototype.constructor = TransformGizmoScale;\n\nfunction TransformControls(camera, domElement) {\n\n    // TODO: Make non-uniform scale and rotate play nice in hierarchies\n    // TODO: ADD RXYZ contol\n\n    THREE.Object3D.call(this);\n\n    domElement = domElement !== undefined ? domElement : document;\n\n    this.object = undefined;\n    this.visible = false;\n    this.translationSnap = null;\n    this.rotationSnap = null;\n    this.space = \"world\";\n    this.size = 1;\n    this.axis = null;\n\n    var scope = this;\n\n    var _mode = \"translate\";\n    var _dragging = false;\n    var _plane = \"XY\";\n    var _gizmo = {\n        \"translate\": new TransformGizmoTranslate(),\n        \"rotate\": new TransformGizmoRotate(),\n        \"scale\": new TransformGizmoScale()\n    };\n\n    for (var type in _gizmo) {\n\n        var gizmoObj = _gizmo[type];\n\n        gizmoObj.visible = type === _mode;\n        this.add(gizmoObj);\n    }\n\n    var changeEvent = { type: \"change\" };\n    var mouseDownEvent = { type: \"mouseDown\" };\n    var mouseUpEvent = { type: \"mouseUp\", mode: _mode };\n    var objectChangeEvent = { type: \"objectChange\" };\n\n    var ray = new THREE.Raycaster();\n    ray.linePrecision = 0.01;\n    var pointerVector = new THREE.Vector2();\n\n    var point = new THREE.Vector3();\n    var offset = new THREE.Vector3();\n\n    var rotation = new THREE.Vector3();\n    var offsetRotation = new THREE.Vector3();\n    var scale = 1;\n\n    var lookAtMatrix = new THREE.Matrix4();\n    var eye = new THREE.Vector3();\n\n    var tempMatrix = new THREE.Matrix4();\n    var tempVector = new THREE.Vector3();\n    var tempQuaternion = new THREE.Quaternion();\n    var unitX = new THREE.Vector3(1, 0, 0);\n    var unitY = new THREE.Vector3(0, 1, 0);\n    var unitZ = new THREE.Vector3(0, 0, 1);\n\n    var quaternionXYZ = new THREE.Quaternion();\n    var quaternionX = new THREE.Quaternion();\n    var quaternionY = new THREE.Quaternion();\n    var quaternionZ = new THREE.Quaternion();\n    var quaternionE = new THREE.Quaternion();\n\n    var oldPosition = new THREE.Vector3();\n    var oldScale = new THREE.Vector3();\n    var oldRotationMatrix = new THREE.Matrix4();\n\n    var parentRotationMatrix = new THREE.Matrix4();\n    var parentScale = new THREE.Vector3();\n\n    var worldPosition = new THREE.Vector3();\n    var worldRotation = new THREE.Euler();\n    var worldRotationMatrix = new THREE.Matrix4();\n    var camPosition = new THREE.Vector3();\n    var camRotation = new THREE.Euler();\n\n    domElement.addEventListener(\"mousedown\", onPointerDown, false);\n    domElement.addEventListener(\"touchstart\", onPointerDown, false);\n\n    domElement.addEventListener(\"mousemove\", onPointerHover, false);\n    domElement.addEventListener(\"touchmove\", onPointerHover, false);\n\n    domElement.addEventListener(\"mousemove\", onPointerMove, false);\n    domElement.addEventListener(\"touchmove\", onPointerMove, false);\n\n    domElement.addEventListener(\"mouseup\", onPointerUp, false);\n    domElement.addEventListener(\"mouseout\", onPointerUp, false);\n    domElement.addEventListener(\"touchend\", onPointerUp, false);\n    domElement.addEventListener(\"touchcancel\", onPointerUp, false);\n    domElement.addEventListener(\"touchleave\", onPointerUp, false);\n\n    this.dispose = function () {\n\n        domElement.removeEventListener(\"mousedown\", onPointerDown);\n        domElement.removeEventListener(\"touchstart\", onPointerDown);\n\n        domElement.removeEventListener(\"mousemove\", onPointerHover);\n        domElement.removeEventListener(\"touchmove\", onPointerHover);\n\n        domElement.removeEventListener(\"mousemove\", onPointerMove);\n        domElement.removeEventListener(\"touchmove\", onPointerMove);\n\n        domElement.removeEventListener(\"mouseup\", onPointerUp);\n        domElement.removeEventListener(\"mouseout\", onPointerUp);\n        domElement.removeEventListener(\"touchend\", onPointerUp);\n        domElement.removeEventListener(\"touchcancel\", onPointerUp);\n        domElement.removeEventListener(\"touchleave\", onPointerUp);\n    };\n\n    this.attach = function (object) {\n\n        this.object = object;\n        this.visible = true;\n        this.update();\n    };\n\n    this.detach = function () {\n\n        this.object = undefined;\n        this.visible = false;\n        this.axis = null;\n    };\n\n    this.getMode = function () {\n\n        return _mode;\n    };\n\n    this.setMode = function (mode) {\n\n        _mode = mode ? mode : _mode;\n\n        if (_mode === \"scale\") scope.space = \"local\";\n\n        for (var type in _gizmo) {\n            _gizmo[type].visible = type === _mode;\n        }this.update();\n        scope.dispatchEvent(changeEvent);\n    };\n\n    this.setTranslationSnap = function (translationSnap) {\n\n        scope.translationSnap = translationSnap;\n    };\n\n    this.setRotationSnap = function (rotationSnap) {\n\n        scope.rotationSnap = rotationSnap;\n    };\n\n    this.setSize = function (size) {\n\n        scope.size = size;\n        this.update();\n        scope.dispatchEvent(changeEvent);\n    };\n\n    this.setSpace = function (space) {\n\n        scope.space = space;\n        this.update();\n        scope.dispatchEvent(changeEvent);\n    };\n\n    this.update = function () {\n\n        if (scope.object === undefined) return;\n\n        scope.object.updateMatrixWorld();\n        worldPosition.setFromMatrixPosition(scope.object.matrixWorld);\n        worldRotation.setFromRotationMatrix(tempMatrix.extractRotation(scope.object.matrixWorld));\n\n        camera.updateMatrixWorld();\n        camPosition.setFromMatrixPosition(camera.matrixWorld);\n        camRotation.setFromRotationMatrix(tempMatrix.extractRotation(camera.matrixWorld));\n\n        scale = worldPosition.distanceTo(camPosition) / 6 * scope.size;\n        this.position.copy(worldPosition);\n        this.scale.set(scale, scale, scale);\n\n        if (camera instanceof THREE.PerspectiveCamera) {\n\n            eye.copy(camPosition).sub(worldPosition).normalize();\n        } else if (camera instanceof THREE.OrthographicCamera) {\n\n            eye.copy(camPosition).normalize();\n        }\n\n        if (scope.space === \"local\") {\n\n            _gizmo[_mode].update(worldRotation, eye);\n        } else if (scope.space === \"world\") {\n\n            _gizmo[_mode].update(new THREE.Euler(), eye);\n        }\n\n        _gizmo[_mode].highlight(scope.axis);\n    };\n\n    function onPointerHover(event) {\n\n        if (scope.object === undefined || _dragging === true || event.button !== undefined && event.button !== 0) return;\n\n        var pointer = event.changedTouches ? event.changedTouches[0] : event;\n\n        var intersect = intersectObjects(pointer, _gizmo[_mode].handles.children);\n\n        var axis = null;\n\n        if (intersect) {\n\n            axis = intersect.object.name;\n\n            event.preventDefault();\n        }\n\n        if (scope.axis !== axis) {\n\n            scope.axis = axis;\n            scope.update();\n            scope.dispatchEvent(changeEvent);\n        }\n    }\n\n    function onPointerDown(event) {\n\n        if (scope.object === undefined || _dragging === true || event.button !== undefined && event.button !== 0) return;\n\n        var pointer = event.changedTouches ? event.changedTouches[0] : event;\n\n        if (pointer.button === 0 || pointer.button === undefined) {\n\n            var intersect = intersectObjects(pointer, _gizmo[_mode].handles.children);\n\n            if (intersect) {\n\n                event.preventDefault();\n                event.stopPropagation();\n\n                scope.dispatchEvent(mouseDownEvent);\n\n                scope.axis = intersect.object.name;\n\n                scope.update();\n\n                eye.copy(camPosition).sub(worldPosition).normalize();\n\n                _gizmo[_mode].setActivePlane(scope.axis, eye);\n\n                var planeIntersect = intersectObjects(pointer, [_gizmo[_mode].activePlane]);\n\n                if (planeIntersect) {\n\n                    oldPosition.copy(scope.object.position);\n                    oldScale.copy(scope.object.scale);\n\n                    oldRotationMatrix.extractRotation(scope.object.matrix);\n                    worldRotationMatrix.extractRotation(scope.object.matrixWorld);\n\n                    parentRotationMatrix.extractRotation(scope.object.parent.matrixWorld);\n                    parentScale.setFromMatrixScale(tempMatrix.getInverse(scope.object.parent.matrixWorld));\n\n                    offset.copy(planeIntersect.point);\n                }\n            }\n        }\n\n        _dragging = true;\n    }\n\n    function onPointerMove(event) {\n\n        if (scope.object === undefined || scope.axis === null || _dragging === false || event.button !== undefined && event.button !== 0) return;\n\n        var pointer = event.changedTouches ? event.changedTouches[0] : event;\n\n        var planeIntersect = intersectObjects(pointer, [_gizmo[_mode].activePlane]);\n\n        if (planeIntersect === false) return;\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        point.copy(planeIntersect.point);\n\n        if (_mode === \"translate\") {\n\n            point.sub(offset);\n            point.multiply(parentScale);\n\n            if (scope.space === \"local\") {\n\n                point.applyMatrix4(tempMatrix.getInverse(worldRotationMatrix));\n\n                if (scope.axis.search(\"X\") === -1) point.x = 0;\n                if (scope.axis.search(\"Y\") === -1) point.y = 0;\n                if (scope.axis.search(\"Z\") === -1) point.z = 0;\n\n                point.applyMatrix4(oldRotationMatrix);\n\n                scope.object.position.copy(oldPosition);\n                scope.object.position.add(point);\n            }\n\n            if (scope.space === \"world\" || scope.axis.search(\"XYZ\") !== -1) {\n\n                if (scope.axis.search(\"X\") === -1) point.x = 0;\n                if (scope.axis.search(\"Y\") === -1) point.y = 0;\n                if (scope.axis.search(\"Z\") === -1) point.z = 0;\n\n                point.applyMatrix4(tempMatrix.getInverse(parentRotationMatrix));\n\n                scope.object.position.copy(oldPosition);\n                scope.object.position.add(point);\n            }\n\n            if (scope.translationSnap !== null) {\n\n                if (scope.space === \"local\") {\n\n                    scope.object.position.applyMatrix4(tempMatrix.getInverse(worldRotationMatrix));\n                }\n\n                if (scope.axis.search(\"X\") !== -1) scope.object.position.x = Math.round(scope.object.position.x / scope.translationSnap) * scope.translationSnap;\n                if (scope.axis.search(\"Y\") !== -1) scope.object.position.y = Math.round(scope.object.position.y / scope.translationSnap) * scope.translationSnap;\n                if (scope.axis.search(\"Z\") !== -1) scope.object.position.z = Math.round(scope.object.position.z / scope.translationSnap) * scope.translationSnap;\n\n                if (scope.space === \"local\") {\n\n                    scope.object.position.applyMatrix4(worldRotationMatrix);\n                }\n            }\n        } else if (_mode === \"scale\") {\n\n            point.sub(offset);\n            point.multiply(parentScale);\n\n            if (scope.space === \"local\") {\n\n                if (scope.axis === \"XYZ\") {\n\n                    scale = 1 + point.y / Math.max(oldScale.x, oldScale.y, oldScale.z);\n\n                    scope.object.scale.x = oldScale.x * scale;\n                    scope.object.scale.y = oldScale.y * scale;\n                    scope.object.scale.z = oldScale.z * scale;\n                } else {\n\n                    point.applyMatrix4(tempMatrix.getInverse(worldRotationMatrix));\n\n                    if (scope.axis === \"X\") scope.object.scale.x = oldScale.x * (1 + point.x / oldScale.x);\n                    if (scope.axis === \"Y\") scope.object.scale.y = oldScale.y * (1 + point.y / oldScale.y);\n                    if (scope.axis === \"Z\") scope.object.scale.z = oldScale.z * (1 + point.z / oldScale.z);\n                }\n            }\n        } else if (_mode === \"rotate\") {\n\n            point.sub(worldPosition);\n            point.multiply(parentScale);\n            tempVector.copy(offset).sub(worldPosition);\n            tempVector.multiply(parentScale);\n\n            if (scope.axis === \"E\") {\n\n                point.applyMatrix4(tempMatrix.getInverse(lookAtMatrix));\n                tempVector.applyMatrix4(tempMatrix.getInverse(lookAtMatrix));\n\n                rotation.set(Math.atan2(point.z, point.y), Math.atan2(point.x, point.z), Math.atan2(point.y, point.x));\n                offsetRotation.set(Math.atan2(tempVector.z, tempVector.y), Math.atan2(tempVector.x, tempVector.z), Math.atan2(tempVector.y, tempVector.x));\n\n                tempQuaternion.setFromRotationMatrix(tempMatrix.getInverse(parentRotationMatrix));\n\n                quaternionE.setFromAxisAngle(eye, rotation.z - offsetRotation.z);\n                quaternionXYZ.setFromRotationMatrix(worldRotationMatrix);\n\n                tempQuaternion.multiplyQuaternions(tempQuaternion, quaternionE);\n                tempQuaternion.multiplyQuaternions(tempQuaternion, quaternionXYZ);\n\n                scope.object.quaternion.copy(tempQuaternion);\n            } else if (scope.axis === \"XYZE\") {\n\n                quaternionE.setFromEuler(point.clone().cross(tempVector).normalize()); // rotation axis\n\n                tempQuaternion.setFromRotationMatrix(tempMatrix.getInverse(parentRotationMatrix));\n                quaternionX.setFromAxisAngle(quaternionE, -point.clone().angleTo(tempVector));\n                quaternionXYZ.setFromRotationMatrix(worldRotationMatrix);\n\n                tempQuaternion.multiplyQuaternions(tempQuaternion, quaternionX);\n                tempQuaternion.multiplyQuaternions(tempQuaternion, quaternionXYZ);\n\n                scope.object.quaternion.copy(tempQuaternion);\n            } else if (scope.space === \"local\") {\n\n                point.applyMatrix4(tempMatrix.getInverse(worldRotationMatrix));\n\n                tempVector.applyMatrix4(tempMatrix.getInverse(worldRotationMatrix));\n\n                rotation.set(Math.atan2(point.z, point.y), Math.atan2(point.x, point.z), Math.atan2(point.y, point.x));\n                offsetRotation.set(Math.atan2(tempVector.z, tempVector.y), Math.atan2(tempVector.x, tempVector.z), Math.atan2(tempVector.y, tempVector.x));\n\n                quaternionXYZ.setFromRotationMatrix(oldRotationMatrix);\n\n                if (scope.rotationSnap !== null) {\n\n                    quaternionX.setFromAxisAngle(unitX, Math.round((rotation.x - offsetRotation.x) / scope.rotationSnap) * scope.rotationSnap);\n                    quaternionY.setFromAxisAngle(unitY, Math.round((rotation.y - offsetRotation.y) / scope.rotationSnap) * scope.rotationSnap);\n                    quaternionZ.setFromAxisAngle(unitZ, Math.round((rotation.z - offsetRotation.z) / scope.rotationSnap) * scope.rotationSnap);\n                } else {\n\n                    quaternionX.setFromAxisAngle(unitX, rotation.x - offsetRotation.x);\n                    quaternionY.setFromAxisAngle(unitY, rotation.y - offsetRotation.y);\n                    quaternionZ.setFromAxisAngle(unitZ, rotation.z - offsetRotation.z);\n                }\n\n                if (scope.axis === \"X\") quaternionXYZ.multiplyQuaternions(quaternionXYZ, quaternionX);\n                if (scope.axis === \"Y\") quaternionXYZ.multiplyQuaternions(quaternionXYZ, quaternionY);\n                if (scope.axis === \"Z\") quaternionXYZ.multiplyQuaternions(quaternionXYZ, quaternionZ);\n\n                scope.object.quaternion.copy(quaternionXYZ);\n            } else if (scope.space === \"world\") {\n\n                rotation.set(Math.atan2(point.z, point.y), Math.atan2(point.x, point.z), Math.atan2(point.y, point.x));\n                offsetRotation.set(Math.atan2(tempVector.z, tempVector.y), Math.atan2(tempVector.x, tempVector.z), Math.atan2(tempVector.y, tempVector.x));\n\n                tempQuaternion.setFromRotationMatrix(tempMatrix.getInverse(parentRotationMatrix));\n\n                if (scope.rotationSnap !== null) {\n\n                    quaternionX.setFromAxisAngle(unitX, Math.round((rotation.x - offsetRotation.x) / scope.rotationSnap) * scope.rotationSnap);\n                    quaternionY.setFromAxisAngle(unitY, Math.round((rotation.y - offsetRotation.y) / scope.rotationSnap) * scope.rotationSnap);\n                    quaternionZ.setFromAxisAngle(unitZ, Math.round((rotation.z - offsetRotation.z) / scope.rotationSnap) * scope.rotationSnap);\n                } else {\n\n                    quaternionX.setFromAxisAngle(unitX, rotation.x - offsetRotation.x);\n                    quaternionY.setFromAxisAngle(unitY, rotation.y - offsetRotation.y);\n                    quaternionZ.setFromAxisAngle(unitZ, rotation.z - offsetRotation.z);\n                }\n\n                quaternionXYZ.setFromRotationMatrix(worldRotationMatrix);\n\n                if (scope.axis === \"X\") tempQuaternion.multiplyQuaternions(tempQuaternion, quaternionX);\n                if (scope.axis === \"Y\") tempQuaternion.multiplyQuaternions(tempQuaternion, quaternionY);\n                if (scope.axis === \"Z\") tempQuaternion.multiplyQuaternions(tempQuaternion, quaternionZ);\n\n                tempQuaternion.multiplyQuaternions(tempQuaternion, quaternionXYZ);\n\n                scope.object.quaternion.copy(tempQuaternion);\n            }\n        }\n\n        scope.update();\n        scope.dispatchEvent(changeEvent);\n        scope.dispatchEvent(objectChangeEvent);\n    }\n\n    function onPointerUp(event) {\n\n        event.preventDefault(); // Prevent MouseEvent on mobile\n\n        if (event.button !== undefined && event.button !== 0) return;\n\n        if (_dragging && scope.axis !== null) {\n\n            mouseUpEvent.mode = _mode;\n            scope.dispatchEvent(mouseUpEvent);\n        }\n\n        _dragging = false;\n\n        if ('TouchEvent' in window && event instanceof TouchEvent) {\n\n            // Force \"rollover\"\n\n            scope.axis = null;\n            scope.update();\n            scope.dispatchEvent(changeEvent);\n        } else {\n\n            onPointerHover(event);\n        }\n    }\n\n    function intersectObjects(pointer, objects) {\n\n        var rect = domElement.getBoundingClientRect();\n        var x = (pointer.clientX - rect.left) / rect.width;\n        var y = (pointer.clientY - rect.top) / rect.height;\n\n        pointerVector.set(x * 2 - 1, -(y * 2) + 1);\n        ray.setFromCamera(pointerVector, camera);\n\n        var intersections = ray.intersectObjects(objects, true);\n        return intersections[0] ? intersections[0] : false;\n    }\n}\n\nTransformControls.prototype = Object.create(THREE.Object3D.prototype);\nTransformControls.prototype.constructor = TransformControls;\n\nexport { TransformControls };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n","/**\n * @author kennethjiang / https://github.com/kennethjiang\n *\n *\n * Description: A THREE view port for STL models\n *\n * Usage:\n *  var viewPort = new THREE.STLViewPort(canvas, width, height, function() {\n *     //things to do when any model in the view port changes\n *  });\n *  viewPort.init();\n *  viewPort.loadSTL(url, fucntion(model) {\n *     viewPort.makeModelActive(model);\n *     //things to do when model is loaded\n *  });\n *  var scene = viewPort.scene; // direct access to the scene for to add THREE.Object\n *\n */\n\n\n'use strict';\n\nimport * as THREETK from '3tk';\n\nexport function STLViewPort( canvas, width, height, onChange, onNewModel ) {\n\n    var self = this;\n\n    self.canvas = canvas;\n    self.canvasWidth = width;\n    self.canvasHeight = height;\n    self.onChange = onChange;\n    self.onNewModel = onNewModel;\n\n    self.models = [];\n\n    self.effectController = {\n        metalness: 0.5,\n        roughness: 0.5,\n        modelInactiveColor: new THREE.Color(\"#60715b\"),\n        modelActiveColor: new THREE.Color(\"#34bf0d\"),\n        ambientLightColor: new THREE.Color(\"#2b2b2b\"),\n        directionalLightColor: new THREE.Color(\"#ffffff\"),\n    };\n\n    self.init = function() {\n\n        self.camera = new THREE.PerspectiveCamera( 45, 1.0, 0.1, 5000 );\n\n        self.camera.up.set( 0, 0, 1 );\n        self.camera.position.set( -100, -200, 250 );\n\n        self.scene = new THREE.Scene();\n\n        // Lights\n        var ambientLight = new THREE.AmbientLight( self.effectController.ambientLightColor );  // 0.2\n        self.scene.add( ambientLight );\n        var directionalLight = new THREE.DirectionalLight(self.effectController.directionalLightColor, 1.0);\n        directionalLight.position.set( 100, 100, 500 );\n        self.scene.add( directionalLight );\n        var directionalLight2= new THREE.DirectionalLight(self.effectController.directionalLightColor, 1.0);\n        directionalLight2.position.set( 100, 100, -500);\n        self.scene.add( directionalLight2);\n\n        self.renderer = new THREE.WebGLRenderer( { canvas: self.canvas, antialias: true } );\n\n        self.renderer.setClearColor( 0xd8d8d8 );\n        self.renderer.setSize( self.canvasWidth, self.canvasHeight );\n        self.renderer.setPixelRatio( window.devicePixelRatio );\n\n        self.renderer.gammaInput = true;\n        self.renderer.gammaOutput = true;\n\n        self.orbitControls = new THREE.OrbitControls(self.camera, self.renderer.domElement);\n\n        self.orbitControls.enableDamping = true;\n        self.orbitControls.dampingFactor = 0.25;\n        self.orbitControls.enablePan = false;\n        self.orbitControls.addEventListener(\"change\", self.render);\n\n        self.transformControls = new THREETK.TransformControls(self.camera, self.renderer.domElement);\n\n        self.transformControls.setRotationSnap( THREE.Math.degToRad( 15 ) )\n        self.transformControls.addEventListener(\"change\", self.render);\n        self.transformControls.addEventListener(\"mouseDown\", self.startTransform);\n        self.transformControls.addEventListener(\"mouseUp\", self.endTransform);\n        self.transformControls.addEventListener(\"change\", self.onChange);\n        self.scene.add(self.transformControls);\n\n        window.addEventListener( 'keydown', function ( event ) {\n            switch ( event.keyCode ) {\n                case 17: // Ctrl\n                    self.transformControls.setRotationSnap(null);\n                    break;\n            }\n        });\n\n        window.addEventListener( 'keyup', function ( event ) {\n            switch ( event.keyCode ) {\n                case 17: // Ctrl\n                    self.transformControls.setRotationSnap( THREE.Math.degToRad( 15 ) );\n                    break;\n            }\n        });\n\n        // Unforutnately built-in \"click\" event is fired when it's a drag. We need all these complexity to detect real click (no mousemoves between mousedown and mouseup)\n        self.canvas.addEventListener(\"mousedown\", function() { self.lastMouseEvent = \"mousedown\" });\n        self.canvas.addEventListener(\"mousemove\", function() { self.lastMouseEvent = \"mousemove\" });\n        self.canvas.addEventListener(\"mouseup\", function(e) { if (self.lastMouseEvent == \"mousedown\") self.pickActiveModel(e); });\n\n        self.render();\n    };\n\n    self.render = function() {\n        self.orbitControls.update();\n        self.transformControls.update();\n        self.renderer.render( self.scene, self.camera );\n    };\n\n\n    self.loadSTL = function ( url, onLoad ) {\n        new THREE.STLLoader().load(url, function ( geometry ) {\n            self.onNewModel([\n                self.addModelOfGeometry(geometry)\n            ]);\n        });\n    };\n\n    self.addModelOfGeometry = function( geometry, modelToCopyTransformFrom ) {\n        var material = new THREE.MeshStandardMaterial({\n            color: self.effectController.modelInactiveColor,  // We'll mark it active below.\n            shading: THREE.SmoothShading,\n            side: THREE.DoubleSide,\n            metalness: self.effectController.metalness,\n            roughness: self.effectController.roughness });\n\n        var stlModel = new THREE.Mesh( geometry, material );\n\n        // center model's origin\n        var center = new THREE.Box3().setFromObject(stlModel).center();\n        var model = new THREE.Object3D();\n        model.add(stlModel);\n        stlModel.position.copy(center.negate());\n        if (modelToCopyTransformFrom) {\n            model.rotation.copy(modelToCopyTransformFrom.rotation);\n            model.scale.copy(modelToCopyTransformFrom.scale);\n        }\n\n        self.scene.add(model);\n        self.render();\n\n        self.models.push(model);\n        return model;\n    };\n\n    self.activeModel = function() {\n        return self.transformControls.object;\n    }\n\n    self.pickActiveModel = function( event ) {\n        var rect = self.canvas.getBoundingClientRect();\n        var x = (event.clientX - rect.left) / rect.width;\n        var y = (event.clientY - rect.top) / rect.height;\n\n        var pointerVector = new THREE.Vector2();\n        pointerVector.set((x*2) - 1, -(y*2) + 1);\n        var ray = new THREE.Raycaster();\n        ray.setFromCamera(pointerVector, self.camera);\n\n        // Clicking should cycle through the stlFiles if there are multiple under the cursor.\n        var foundActiveModel = false;\n        var nextPointedModel = undefined;\n        var firstPointedModel = undefined;\n        for (var i = 0; i < self.models.length; i++) {\n            var model = self.models[i];\n            var intersections = ray.intersectObjects( model.children, true ); // Not sure why ray will intersect the children but not the model itself.\n            if (!intersections[0]) {\n                continue;\n            }\n            if (!firstPointedModel) {\n                firstPointedModel = model;\n            }\n            if (foundActiveModel && !nextPointedModel) {\n                nextPointedModel = model;\n            }\n            if (self.activeModel() == model) {\n                foundActiveModel = true;\n            }\n        }\n        if (nextPointedModel) {\n            self.makeModelActive(nextPointedModel);\n        } else if (firstPointedModel) {\n            self.makeModelActive(firstPointedModel);\n        }\n    };\n\n    /**\n     * params:\n     *    m: model to make active. Clear active model if m is undefined\n     *\n     */\n    self.makeModelActive = function(m) {\n        // Sets one file active and inactivates all the others.\n        if (m) {\n            self.transformControls.attach(m);\n        } else {\n            self.transformControls.detach();\n        }\n\n        for (var i = 0; i < self.models.length; i++) {\n            var model = self.models[i];\n            if (model == self.activeModel()) {\n                model.children[0].material.color.copy(self.effectController.modelActiveColor);\n            } else {\n                model.children[0].material.color.copy(self.effectController.modelInactiveColor);\n            }\n        }\n\n        self.render();\n        self.onChange();\n    };\n\n    self.removeActiveModel = function() {\n        if (!self.activeModel()) {\n            return undefined;\n        } else {\n            var model = self.activeModel();\n\n            var index = self.models.indexOf(model);\n            if (index > -1) {\n                self.models.splice(index, 1);\n            }\n\n            self.scene.remove(model);\n            self.makeModelActive(undefined);\n            return model;\n        }\n    };\n\n    self.removeAllModels = function() {\n        for (var i = 0; i < self.models.length; i++) {\n            self.scene.remove(self.models[i]);\n        }\n        self.models = [];\n        self.makeModelActive(undefined);\n    }\n\n    self.splitActiveModel = function() {\n        if (!self.activeModel()) {\n            return;\n        } else {\n            var originalModel = self.removeActiveModel()\n            var geometry = originalModel.children[0].geometry;\n            var newGeometries = GeometryUtils.split(geometry);\n            self.onNewModel(\n                newGeometries.map( function(geometry) {\n                    return self.addModelOfGeometry( geometry, originalModel );\n                })\n            );\n        }\n    };\n\n    self.onlyOneOriginalModel = function() {\n        return self.models.length == 1  &&\n            self.models[0].position.x == 0.0 &&\n            self.models[0].position.y == 0.0 &&\n            self.models[0].rotation.x == 0.0 &&\n            self.models[0].rotation.y == 0.0 &&\n            self.models[0].rotation.z == 0.0 &&\n            self.models[0].scale.x == 1.0 &&\n            self.models[0].scale.y == 1.0 &&\n            self.models[0].scale.z == 1.0\n    };\n\n    self.startTransform = function () {\n        // Disable orbit controls\n        self.orbitControls.enabled = false;\n    };\n\n    self.endTransform = function () {\n        // Enable orbit controls\n        self.orbitControls.enabled = true;\n    };\n\n}\n","/*\n * View model for OctoPrint-Slicer\n *\n * Author: Kenneth Jiang\n * License: AGPLv3\n */\n\n'use strict';\n\nimport { STLViewPort } from './STLViewPort';\n\nif (window.location.hostname != \"localhost\") {\n    Raven.config('https://85bd9314656d40da9249aec5a32a2b52@sentry.io/141297', {\n        release: '0.9.6',\n        ignoreErrors: [\n                \"Failed to execute 'arc' on 'CanvasRenderingContext2D': The radius provided\",\n                \"Cannot read property 'highlightFill' of undefined\",\n                \"Argument 1 of SVGMatrix.translate is not a finite floating-point value\",\n                /_jp.*is not a function/,\n            ],\n    }).install();\n}\n\n    function SlicerViewModel(parameters) {\n        mixpanel.track(\"App Loaded\");\n\n        var self = this;\n\n        self.canvas = document.getElementById( 'slicer-canvas' );\n\n        //check if webGL is present. If not disable Slicer plugin\n        if ( ! Detector.webgl ) {\n            $('#tab_plugin_slicer').empty().append(\"<h3>Slicer Plugin is disabled because your browser doesn't support WebGL</h3>\");\n            return;\n        }\n\n        // assign the injected parameters, e.g.:\n        self.slicingViewModel = parameters[0];\n        self.overridesViewModel = parameters[1];\n        self.printerStateViewModel = parameters[2];\n        self.printerProfilesViewModel = parameters[3];\n\n        self.lockScale = true;\n        self.selectedSTL = undefined;\n        self.newPrint = true;\n\n\n        // Override slicingViewModel.show to surpress default slicing behavior\n        self.slicingViewModel.show = function(target, file, force) {\n            if (!self.slicingViewModel.enableSlicingDialog() && !force) {\n                return;\n            }\n            mixpanel.track(\"Load STL\");\n\n            $('a[href=\"#tab_plugin_slicer\"]').tab('show');\n\n            self.selectedSTL = {target: target, file: file};\n            if (self.newPrint) {\n                self.addToNewPrint();\n            } else {\n                $(\"#plugin-slicer-load-model\").modal(\"show\");\n            }\n        };\n\n        self.addToNewPrint = function() {\n            self.clearPrint();\n            self.addToExistingPrint();\n        };\n\n        self.addToExistingPrint = function() {\n            self.setSlicingViewModel(self.selectedSTL.target, self.selectedSTL.file);\n            self.addSTL(self.selectedSTL.target, self.selectedSTL.file);\n            self.selectedSTL = undefined;\n\n            $(\"#plugin-slicer-load-model\").modal(\"hide\");\n        };\n\n        self.clearPrint = function() {\n            self.resetSlicingViewModel();\n            self.stlViewPort.removeAllModels();\n            self.newPrint = true;\n        }\n\n        self.addSTL = function(target, file) {\n            self.newPrint = false;\n            self.stlViewPort.loadSTL(BASEURL + \"downloads/files/\" + target + \"/\" + file);\n        }\n\n        self.onModelAdd = function(models) {\n\n            self.stlViewPort.makeModelActive(models[0]);\n\n            models.forEach( function( model ) {\n                self.fixZPosition(model);\n            });\n\n            if (self.stlViewPort.models.length > 1) {\n                ModelArranger.arrange(self.stlViewPort.models);\n            }\n            self.stlViewPort.render();\n\n            $('#tab_plugin_slicer > div.translucent-blocker').hide();\n\n        };\n\n        self.onModelRemove = function(model) {\n            if (self.stlViewPort.models.length == 0) {\n                self.clearPrint();\n            }\n        };\n\n        self.updatePrinterBed = function(profileName) {\n            if ( profileName) {\n                var profile = self.printerProfilesViewModel.profiles.items().find(function(p) { return p.id == profileName })\n\n                var dim = profile.volume\n                self.BEDSIZE_X_MM = dim.width;\n                self.BEDSIZE_Y_MM = dim.depth;\n                self.BEDSIZE_Z_MM = dim.height;\n                if (dim.origin == \"lowerleft\" ) {\n                    self.ORIGIN_OFFSET_X_MM = self.BEDSIZE_X_MM/2.0;\n                    self.ORIGIN_OFFSET_Y_MM = self.BEDSIZE_Y_MM/2.0;\n                } else {\n                    self.ORIGIN_OFFSET_X_MM = 0;\n                    self.ORIGIN_OFFSET_Y_MM = 0;\n                }\n            }\n            self.drawBedFloor(self.BEDSIZE_X_MM, self.BEDSIZE_Y_MM);\n            self.drawWalls(self.BEDSIZE_X_MM, self.BEDSIZE_Y_MM, self.BEDSIZE_Z_MM);\n            self.stlViewPort.render();\n        }\n\n        self.slicingViewModel.printerProfile.subscribe( self.updatePrinterBed );\n\n        self.BEDSIZE_X_MM = 200;\n        self.BEDSIZE_Y_MM = 200;\n        self.BEDSIZE_Z_MM = 200;\n        self.ORIGIN_OFFSET_X_MM = 0;\n        self.ORIGIN_OFFSET_Y_MM = 0;\n\n        var CANVAS_WIDTH = 588,\n            CANVAS_HEIGHT = 588;\n\n\n        self.init = function() {\n\n            self.slicingViewModel.requestData();\n\n            self.stlViewPort = new STLViewPort(self.canvas, CANVAS_WIDTH, CANVAS_HEIGHT, self.onModelChange, self.onModelAdd)\n            self.stlViewPort.init();\n\n            //Walls and Floor\n            self.walls = new THREE.Object3D();\n            self.floor = new THREE.Object3D();\n            self.stlViewPort.scene.add(self.walls);\n            self.stlViewPort.scene.add(self.floor);\n\n            self.updatePrinterBed();\n\n            ko.applyBindings(self.slicingViewModel, $('#slicing-settings')[0]);\n\n            // Buttons on the canvas, and their behaviors.\n            // TODO: it's not DRY. mix of prez code and logics. need to figure out a better way\n            $(\"#slicer-viewport\").empty().append('<div class=\"report\"><span>Got issues or suggestions? <a target=\"_blank\" href=\"https://github.com/kennethjiang/OctoPrint-Slicer/issues/new\">Click here!</a></span></div>\\\n                  <div class=\"model\">\\\n                    <button class=\"translate disabled\" title=\"Move\"><img src=\"'\n                + PLUGIN_BASEURL\n                + 'slicer/static/img/translate.png\"></button>\\\n                    <button class=\"rotate disabled\" title=\"Rotate\"><img src=\"'\n                + PLUGIN_BASEURL\n                + 'slicer/static/img/rotate.png\"></button>\\\n                    <button class=\"scale disabled\" title=\"Scale\"><img src=\"'\n                + PLUGIN_BASEURL\n                + 'slicer/static/img/scale.png\"></button>\\\n                    <button class=\"remove disabled\" title=\"Remove\"><img src=\"'\n                + PLUGIN_BASEURL\n                + 'slicer/static/img/remove.png\"></button>\\\n                    <button class=\"split disabled\" title=\"Split\"><img src=\"'\n                + PLUGIN_BASEURL\n                + 'slicer/static/img/split.png\"></button>\\\n                </div>\\\n                <div class=\"values translate\">\\\n                    <div>\\\n                        <p><span class=\"axis x\">X</span><input type=\"number\" step=\"any\" name=\"x\"><span title=\"\">mm</span></p>\\\n                        <p><span class=\"axis y\">Y</span><input type=\"number\" step=\"any\" name=\"y\"><span title=\"\">mm</span></p>\\\n                        <span></span>\\\n                    </div>\\\n               </div>\\\n                <div class=\"values rotate\">\\\n                    <div>\\\n                        <p><span class=\"axis x\">X</span><input type=\"number\" step=\"any\" name=\"x\"><span title=\"\">°</span></p>\\\n                        <p><span class=\"axis y\">Y</span><input type=\"number\" step=\"any\" name=\"y\"><span title=\"\">°</span></p>\\\n                        <p><span class=\"axis z\">Z</span><input type=\"number\" step=\"any\" name=\"z\"><span title=\"\">°</span></p>\\\n                        <span></span>\\\n                    </div>\\\n               </div>\\\n                <div class=\"values scale\">\\\n                    <div>\\\n                        <p><span class=\"axis x\">X</span><input type=\"number\" step=\"0.001\" name=\"x\" min=\"0.001\"></p>\\\n                        <p><span class=\"axis y\">Y</span><input type=\"number\" step=\"0.001\" name=\"y\" min=\"0.001\"></p>\\\n                        <p><span class=\"axis z\">Z</span><input type=\"number\" step=\"0.001\" name=\"z\" min=\"0.001\"></p>\\\n                        <p class=\"checkbox\"><label><input type=\"checkbox\" checked>Lock</label></p>\\\n                        <span></span>\\\n                    </div>\\\n               </div>');\n\n            $(\"#slicer-viewport\").append(self.stlViewPort.renderer.domElement);\n\n            $(\"#slicer-viewport button.translate\").click(function(event) {\n                self.stlViewPort.transformControls.setMode(\"translate\");\n                self.stlViewPort.transformControls.space = \"world\";\n                self.toggleValueInputs($(\"#slicer-viewport .translate.values div\"));\n            });\n            $(\"#slicer-viewport button.rotate\").click(function(event) {\n                self.stlViewPort.transformControls.setMode(\"rotate\");\n                self.stlViewPort.transformControls.space = \"world\";\n                self.toggleValueInputs($(\"#slicer-viewport .rotate.values div\"));\n            });\n            $(\"#slicer-viewport button.scale\").click(function(event) {\n                self.stlViewPort.transformControls.setMode(\"scale\");\n                self.stlViewPort.transformControls.space = \"local\";\n                self.toggleValueInputs($(\"#slicer-viewport .scale.values div\"));\n            });\n            $(\"#slicer-viewport button.remove\").click(function(event) {\n                self.onModelRemove( self.stlViewPort.removeActiveModel() );\n            });\n            $(\"#slicer-viewport button.split\").click(function(event) {\n                self.onModelRemove( self.stlViewPort.splitActiveModel() );\n            });\n            $(\"#slicer-viewport .values input\").change(function() {\n                self.applyValueInputs($(this));\n            });\n\n        };\n\n        self.toggleValueInputs = function(parentDiv) {\n            if ( parentDiv.hasClass(\"show\") ) {\n                parentDiv.removeClass(\"show\").children('p').removeClass(\"show\");\n            } else if (self.stlViewPort.activeModel()) {\n                $(\"#slicer-viewport .values div\").removeClass(\"show\");\n                parentDiv.addClass(\"show\").children('p').addClass(\"show\");\n            }\n        };\n\n        self.applyValueInputs = function(input) {\n            input.blur();\n            if(input[0].type == \"checkbox\") {\n                self.lockScale = input[0].checked;\n            }\n            else if(input[0].type == \"number\" && !isNaN(parseFloat(input.val()))) {\n                input.val(parseFloat(input.val()).toFixed(3));\n                var model = self.stlViewPort.activeModel();\n\n                if (input.closest(\".values\").hasClass(\"scale\") && self.lockScale) {\n                    $(\"#slicer-viewport .scale.values input\").val(input.val());\n                    console.log($(\"#slicer-viewport .scale.values input[name=\\\"x\\\"]\").val());\n                }\n\n                model.position.x =  parseFloat($(\"#slicer-viewport .translate.values input[name=\\\"x\\\"]\").val())\n                model.position.y =  parseFloat($(\"#slicer-viewport .translate.values input[name=\\\"y\\\"]\").val())\n                model.rotation.x =  THREE.Math.degToRad($(\"#slicer-viewport .rotate.values input[name=\\\"x\\\"]\").val());\n                model.rotation.y =  THREE.Math.degToRad($(\"#slicer-viewport .rotate.values input[name=\\\"y\\\"]\").val());\n                model.rotation.z =  THREE.Math.degToRad($(\"#slicer-viewport .rotate.values input[name=\\\"z\\\"]\").val());\n                model.scale.x =  parseFloat($(\"#slicer-viewport .scale.values input[name=\\\"x\\\"]\").val())\n                model.scale.y =  parseFloat($(\"#slicer-viewport .scale.values input[name=\\\"y\\\"]\").val())\n                model.scale.z =  parseFloat($(\"#slicer-viewport .scale.values input[name=\\\"z\\\"]\").val())\n                self.fixZPosition(model);\n                self.stlViewPort.render();\n            }\n        };\n\n        self.fixZPosition = function ( model ) {\n            var bedLowMinZ = 0.0;\n            var boundaryBox = new THREE.Box3().setFromObject(model);\n            boundaryBox.min.sub(model.position);\n            boundaryBox.max.sub(model.position);\n            model.position.z -= model.position.z + boundaryBox.min.z - bedLowMinZ;\n        }\n\n        // callback function when models are changed by TransformControls\n        self.onModelChange = function() {\n            var model = self.stlViewPort.activeModel();\n            if (model) {\n                $(\"#slicer-viewport .translate.values input[name=\\\"x\\\"]\").val(model.position.x.toFixed(3)).attr(\"min\", '');\n                $(\"#slicer-viewport .translate.values input[name=\\\"y\\\"]\").val(model.position.y.toFixed(3)).attr(\"min\", '');\n                $(\"#slicer-viewport .rotate.values input[name=\\\"x\\\"]\").val((model.rotation.x * 180 / Math.PI).toFixed(3)).attr(\"min\", '');\n                $(\"#slicer-viewport .rotate.values input[name=\\\"y\\\"]\").val((model.rotation.y * 180 / Math.PI).toFixed(3)).attr(\"min\", '');\n                $(\"#slicer-viewport .rotate.values input[name=\\\"z\\\"]\").val((model.rotation.z * 180 / Math.PI).toFixed(3)).attr(\"min\", '');\n                $(\"#slicer-viewport .scale.values input[name=\\\"x\\\"]\").val(model.scale.x.toFixed(3)).attr(\"min\", '');\n                $(\"#slicer-viewport .scale.values input[name=\\\"y\\\"]\").val(model.scale.y.toFixed(3)).attr(\"min\", '');\n                $(\"#slicer-viewport .scale.values input[name=\\\"z\\\"]\").val(model.scale.z.toFixed(3)).attr(\"min\", '');\n                $(\"#slicer-viewport .scale.values input[type=\\\"checkbox\\\"]\").checked = self.lockScale;\n                self.fixZPosition(model);\n                self.stlViewPort.render();\n            }\n\n            if (!self.stlViewPort.activeModel()) {\n                $(\"#slicer-viewport .values div\").removeClass(\"show\")\n                $(\"#slicer-viewport button\").addClass(\"disabled\");\n            } else {\n                $(\"#slicer-viewport button\").removeClass(\"disabled\");\n            }\n        };\n\n        // Slicing\n        //\n        self.tempFiles = {};\n        self.removeTempFilesAfterSlicing = function (event) {\n            if ($.inArray(event.data.type, [\"SlicingDone\", \"SlicingFailed\"]) >= 0 &&\n                event.data.payload.stl in self.tempFiles) {\n                OctoPrint.files.delete(event.data.payload.stl_location,\n                    event.data.payload.stl);\n                delete self.tempFiles[event.data.payload.stl];\n            }\n        }\n\n        OctoPrint.socket.onMessage(\"event\", self.removeTempFilesAfterSlicing);\n\n        self.sliceRequestData = function(slicingVM, group) {\n            var destinationFilename = slicingVM._sanitize(slicingVM.destinationFilename());\n\n            var destinationExtensions = slicingVM.data[slicingVM.slicer()] && slicingVM.data[slicingVM.slicer()].extensions && slicingVM.data[slicingVM.slicer()].extensions.destination\n                ? slicingVM.data[slicingVM.slicer()].extensions.destination\n                : [\"???\"];\n            if (!_.any(destinationExtensions, function(extension) {\n                return _.endsWith(destinationFilename.toLowerCase(), \".\" + extension.toLowerCase());\n            })) {\n                destinationFilename = destinationFilename + \".\" + destinationExtensions[0];\n            }\n            var groupCenter = new THREE.Vector3(0,0,0);\n            if (group) {\n                groupCenter = new THREE.Box3().setFromObject(group).center();\n            }\n            var data = {\n                command: \"slice\",\n                slicer: slicingVM.slicer(),\n                profile: slicingVM.profile(),\n                printerProfile: slicingVM.printerProfile(),\n                destination: destinationFilename,\n                position: { \"x\": self.ORIGIN_OFFSET_X_MM + groupCenter.x,\n                    \"y\": self.ORIGIN_OFFSET_Y_MM + groupCenter.y}\n            };\n            _.extend(data, self.overridesViewModel.toJS());\n\n            if (slicingVM.afterSlicing() == \"print\") {\n                data[\"print\"] = true;\n            } else if (slicingVM.afterSlicing() == \"select\") {\n                data[\"select\"] = true;\n            }\n            return data;\n        };\n\n        self.sendSliceRequest = function(target, filename, data) {\n            $.ajax({\n                url: API_BASEURL + \"files/\" + target + \"/\" + filename,\n                type: \"POST\",\n                dataType: \"json\",\n                contentType: \"application/json; charset=UTF-8\",\n                data: JSON.stringify(data),\n                error: function(jqXHR, textStatus) {\n                    new PNotify({title: \"Slicing failed\", text: textStatus, type: \"error\", hide: false});\n                }\n            });\n        };\n\n        self.slice = function() {\n            mixpanel.track(\"Slice Model\");\n\n            var target = self.slicingViewModel.target;\n            var sliceRequestData;\n\n            if (self.stlViewPort.onlyOneOriginalModel()) {\n\n                sliceRequestData = self.sliceRequestData(self.slicingViewModel);\n                self.sendSliceRequest(self.slicingViewModel.target, self.slicingViewModel.file(), sliceRequestData);\n\n            } else {\n\n                var form = new FormData();\n                var group = new THREE.Group();\n                _.forEach(self.stlViewPort.models, function (model) {\n                    group.add(model.clone(true));\n                });\n\n                sliceRequestData = self.sliceRequestData(self.slicingViewModel, group);\n\n                var tempFilename = self.tempSTLFilename();\n                form.append(\"file\", self.blobFromModel(group), tempFilename);\n                $.ajax({\n                    url: API_BASEURL + \"files/local\",\n                    type: \"POST\",\n                    data: form,\n                    processData: false,\n                    contentType: false,\n                    // On success\n                    success: function(_) {\n                        self.tempFiles[tempFilename] = 1;\n                        self.sendSliceRequest(target, tempFilename, sliceRequestData);\n                    },\n                    error: function(jqXHR, textStatus) {\n                        new PNotify({title: \"Slicing failed\", text: textStatus, type: \"error\", hide: false});\n                    }\n                });\n\n            }\n        };\n\n        self.blobFromModel = function( model ) {\n            var exporter = new THREE.STLBinaryExporter();\n            return new Blob([exporter.parse(model)], {type: \"text/plain\"});\n        };\n\n        self.isPrinting = ko.computed(function () {\n            return self.printerStateViewModel.isPrinting() ||\n                self.printerStateViewModel.isPaused();\n        });\n\n        self.canSliceNow = ko.computed(function () {\n            // TODO: We should be checking for same_device here, too.\n            return self.slicingViewModel.enableSliceButton() &&\n                !self.isPrinting();\n        });\n        // END: Slicing\n\n        // Helpers for drawing walls and floor\n        //\n        self.createText = function(font, text, width, depth, parentObj) {\n            var textGeometry = new THREE.TextGeometry( text, {\n                font: font,\n                size: 10,\n                height: 0.1,\n                material: 0, extrudeMaterial: 1\n            });\n            var materialFront = new THREE.MeshBasicMaterial( { color: 0x048e06} );\n            var materialSide = new THREE.MeshBasicMaterial( { color: 0x8A8A8A} );\n            var materialArray = [ materialFront, materialSide ];\n            var textMaterial = new THREE.MeshFaceMaterial(materialArray);\n\n            var mesh = new THREE.Mesh( textGeometry, textMaterial );\n            textGeometry.computeBoundingBox();\n            var textWidth = textGeometry.boundingBox.max.x - textGeometry.boundingBox.min.x;\n            var textHeight = textGeometry.boundingBox.max.y - textGeometry.boundingBox.min.y;\n            switch (text) {\n                case \"Front\":\n                    mesh.position.set(-textWidth/2, -depth/2 - textHeight - 4, 1.0);\n                    break;\n                case \"Back\":\n                    mesh.position.set(textWidth/2, depth/2 + textHeight + 4, 1.0);\n                    mesh.rotation.set(0, 0, Math.PI);\n                    break;\n                case \"Left\":\n                    mesh.position.set(-width/2 - textHeight - 4, textWidth/2, 1.0);\n                    mesh.rotation.set(0, 0, -Math.PI / 2);\n                    break;\n                case \"Right\":\n                    mesh.position.set(width/2 + textHeight, -textWidth/2, 1.0);\n                    mesh.rotation.set(0, 0, Math.PI / 2);\n                    break;\n            }\n            parentObj.add(mesh);\n        };\n\n        self.drawBedFloor = function ( width, depth, segments ) {\n            for(var i = self.floor.children.length - 1; i >= 0; i--) {\n                var obj = self.floor.children[i];\n                self.floor.remove(obj);\n            }\n\n            segments = segments || 20;\n            var geometry = new THREE.PlaneGeometry(width, depth, segments, segments);\n            var materialEven = new THREE.MeshBasicMaterial({color: 0xccccfc});\n            var materialOdd = new THREE.MeshBasicMaterial({color: 0x444464});\n            var materials = [materialEven, materialOdd];\n            for (var x = 0; x < segments; x++) {\n                for (var y = 0; y < segments; y++) {\n                    var i = x * segments + y;\n                    var j = 2 * i;\n                    geometry.faces[ j ].materialIndex = geometry.faces[ j + 1 ].materialIndex = (x + y) % 2;\n                }\n            }\n            var mesh = new THREE.Mesh(geometry, new THREE.MeshFaceMaterial(materials));\n            mesh.receiveShadow = true;\n            self.floor.add(mesh);\n\n            //Add text to indicate front/back of print bed\n            var loader = new THREE.FontLoader();\n            loader.load( PLUGIN_BASEURL + \"slicer/static/js/optimer_bold.typeface.json\", function ( font ) {\n                self.createText(font, \"Front\", width, depth, self.floor);\n                self.createText(font, \"Back\", width, depth, self.floor);\n                self.createText(font, \"Left\", width, depth, self.floor);\n                self.createText(font, \"Right\", width, depth, self.floor);\n                self.stlViewPort.render();\n            } );\n        };\n\n        self.drawWalls = function ( width, depth, height ) {\n            for(var i = self.walls.children.length - 1; i >= 0; i--) {\n                var obj = self.walls.children[i];\n                self.walls.remove(obj);\n            }\n\n            var wall1 = self.rectShape( width, height, 0x8888fc );\n            wall1.rotation.x = Math.PI / 2;\n            wall1.position.set(0, depth/2, height/2);\n            self.walls.add(wall1);\n\n            var wall2 = self.rectShape( height, depth, 0x8888dc );\n            wall2.rotation.y = Math.PI / 2;\n            wall2.position.set(-width/2, 0, height/2);\n            self.walls.add(wall2);\n\n            var wall3 = self.rectShape( width, height, 0x8888fc );\n            wall3.rotation.x = -Math.PI / 2;\n            wall3.position.set(0, -depth/2, height/2);\n            self.walls.add(wall3);\n\n            var wall4 = self.rectShape( height, depth, 0x8888dc );\n            wall4.rotation.y = -Math.PI / 2;\n            wall4.position.set(width/2, 0, height/2);\n            self.walls.add(wall4);\n        };\n\n        self.rectShape = function ( rectLength, rectWidth, color ) {\n            var rectShape = new THREE.Shape();\n            rectShape.moveTo( -rectLength/2,-rectWidth/2 );\n            rectShape.lineTo( -rectLength/2, rectWidth/2 );\n            rectShape.lineTo( rectLength/2, rectWidth/2 );\n            rectShape.lineTo( rectLength/2, -rectWidth/2 );\n            rectShape.lineTo( -rectLength/2, -rectWidth/2 );\n            var rectGeom = new THREE.ShapeGeometry( rectShape );\n            return new THREE.Mesh( rectGeom, new THREE.MeshBasicMaterial( { color: color } ) ) ;\n        };\n        // END: Helpers for drawing walls and floor\n\n        self.resetSlicingViewModel = function() {\n            self.slicingViewModel.target = undefined;\n            self.slicingViewModel.file(undefined);\n            self.slicingViewModel.destinationFilename(undefined);\n        };\n\n        self.setSlicingViewModel = function(target, filename) {\n            if (!self.slicingViewModel.destinationFilename()) {  // A model is added to an empty bed\n                self.slicingViewModel.target = target;\n                self.slicingViewModel.file(filename);\n                self.slicingViewModel.destinationFilename(self.computeDestinationFilename(filename));\n            }\n        };\n\n        // Returns the destination filename based on which models are loaded.\n        // The destination filename is without the final .gco on it because\n        // that will depend on the slicer.\n        self.computeDestinationFilename = function(inputFilename) {\n            // TODO: For now, just use the first model's name.\n            var destinationFilename = inputFilename.substr(0, inputFilename.lastIndexOf(\".\"));\n            if (destinationFilename.lastIndexOf(\"/\") != 0) {\n                destinationFilename = destinationFilename.substr(destinationFilename.lastIndexOf(\"/\") + 1);\n            }\n            return destinationFilename;\n        };\n\n        self.tempSTLFilename = function() {\n            var pos = self.slicingViewModel.file().lastIndexOf(\".\")\n            return [self.slicingViewModel.file().slice(0, pos),\n                \".tmp.\" + (+ new Date()),\n                self.slicingViewModel.file().slice(pos)].join('');\n        };\n\n        self.init();\n    }\n\n\n    // view model class, parameters for constructor, container to bind to\n    OCTOPRINT_VIEWMODELS.push([\n        SlicerViewModel,\n\n        // e.g. loginStateViewModel, settingsViewModel, ...\n        [ \"slicingViewModel\", \"overridesViewModel\", \"printerStateViewModel\", \"printerProfilesViewModel\" ],\n\n        // e.g. #settings_plugin_slicer, #tab_plugin_slicer, ...\n        [ \"#slicer\" ]\n    ]);\n"],"names":["THREE","STLViewPort","canvas","width","height","onChange","onNewModel","self","canvasWidth","canvasHeight","models","effectController","Color","init","camera","PerspectiveCamera","up","set","position","scene","Scene","ambientLight","AmbientLight","ambientLightColor","add","directionalLight","DirectionalLight","directionalLightColor","directionalLight2","renderer","WebGLRenderer","antialias","setClearColor","setSize","setPixelRatio","window","devicePixelRatio","gammaInput","gammaOutput","orbitControls","OrbitControls","domElement","enableDamping","dampingFactor","enablePan","addEventListener","render","transformControls","THREETK","setRotationSnap","Math","degToRad","startTransform","endTransform","event","keyCode","lastMouseEvent","e","pickActiveModel","update","loadSTL","url","onLoad","STLLoader","load","geometry","addModelOfGeometry","modelToCopyTransformFrom","material","MeshStandardMaterial","modelInactiveColor","SmoothShading","DoubleSide","metalness","roughness","stlModel","Mesh","center","Box3","setFromObject","model","Object3D","copy","negate","rotation","scale","push","activeModel","object","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","pointerVector","Vector2","ray","Raycaster","setFromCamera","foundActiveModel","nextPointedModel","undefined","firstPointedModel","i","length","intersections","intersectObjects","children","makeModelActive","m","attach","detach","color","modelActiveColor","removeActiveModel","index","indexOf","splice","remove","removeAllModels","splitActiveModel","originalModel","newGeometries","GeometryUtils","split","map","onlyOneOriginalModel","z","enabled","location","hostname","config","install","SlicerViewModel","parameters","track","document","getElementById","Detector","webgl","empty","append","slicingViewModel","overridesViewModel","printerStateViewModel","printerProfilesViewModel","lockScale","selectedSTL","newPrint","show","target","file","force","enableSlicingDialog","tab","addToNewPrint","modal","clearPrint","addToExistingPrint","setSlicingViewModel","addSTL","resetSlicingViewModel","stlViewPort","BASEURL","onModelAdd","forEach","fixZPosition","arrange","hide","onModelRemove","updatePrinterBed","profileName","profile","profiles","items","find","p","id","dim","volume","BEDSIZE_X_MM","BEDSIZE_Y_MM","depth","BEDSIZE_Z_MM","origin","ORIGIN_OFFSET_X_MM","ORIGIN_OFFSET_Y_MM","drawBedFloor","drawWalls","printerProfile","subscribe","CANVAS_WIDTH","CANVAS_HEIGHT","requestData","onModelChange","walls","floor","applyBindings","$","PLUGIN_BASEURL","click","setMode","space","toggleValueInputs","change","applyValueInputs","parentDiv","hasClass","removeClass","addClass","input","blur","type","checked","isNaN","parseFloat","val","toFixed","closest","log","bedLowMinZ","boundaryBox","min","sub","max","attr","PI","tempFiles","removeTempFilesAfterSlicing","inArray","data","payload","stl","files","delete","stl_location","socket","onMessage","sliceRequestData","slicingVM","group","destinationFilename","_sanitize","destinationExtensions","slicer","extensions","destination","_","any","extension","endsWith","toLowerCase","groupCenter","Vector3","extend","toJS","afterSlicing","sendSliceRequest","filename","ajax","API_BASEURL","JSON","stringify","jqXHR","textStatus","PNotify","title","text","slice","form","FormData","Group","clone","tempFilename","tempSTLFilename","blobFromModel","exporter","STLBinaryExporter","Blob","parse","isPrinting","ko","computed","isPaused","canSliceNow","enableSliceButton","createText","font","parentObj","textGeometry","TextGeometry","extrudeMaterial","materialFront","MeshBasicMaterial","materialSide","materialArray","textMaterial","MeshFaceMaterial","mesh","computeBoundingBox","textWidth","boundingBox","textHeight","segments","obj","PlaneGeometry","materialEven","materialOdd","materials","j","faces","materialIndex","receiveShadow","loader","FontLoader","wall1","rectShape","wall2","wall3","wall4","rectLength","rectWidth","Shape","moveTo","lineTo","rectGeom","ShapeGeometry","computeDestinationFilename","inputFilename","substr","lastIndexOf","pos","Date","join","OCTOPRINT_VIEWMODELS"],"mappings":"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"}